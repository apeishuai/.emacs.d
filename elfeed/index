;;; Elfeed Database Index (version 4)

;; Dummy index for backwards compatablity:
(:version "0.0.3" :feeds #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.800000011920929 data ()) :entries #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.800000011920929 data ()) :index [cl-struct-avl-tree- [nil nil nil 0] elfeed-db-compare])

;; Real index:
(:version 4 :feeds #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("http://emacs.stackexchange.com/feeds" #s(elfeed-feed "http://emacs.stackexchange.com/feeds" "http://emacs.stackexchange.com/feeds" "Recent Questions - Emacs Stack Exchange" nil (:title "SX" :failures 4 :last-modified "Sat, 07 Aug 2021 12:16:03 GMT" :canonical-url "https://emacs.stackexchange.com/feeds")) "http://understandinguncertainty.org/rss.xml" #s(elfeed-feed "http://understandinguncertainty.org/rss.xml" "http://understandinguncertainty.org/rss.xml" "Understanding Uncertainty" nil (:failures 5 :last-modified "Sat, 07 Aug 2021 12:00:04 GMT" :etag "woIkrRZEf5lqJeEwgxvUwKHK4M4" :canonical-url "http://feeds2.feedburner.com/UnderstandingUncertainty")) "http://www.reddit.com/r/emacs/.rss" #s(elfeed-feed "http://www.reddit.com/r/emacs/.rss" "http://www.reddit.com/r/emacs/.rss" "M-x emacs-reddit" nil (:failures 5 :canonical-url "https://www.reddit.com/r/emacs/.rss")) "http://xkcd.com/rss.xml" #s(elfeed-feed "http://xkcd.com/rss.xml" "http://xkcd.com/rss.xml" "xkcd.com" nil (:failures 4 :last-modified "Sat, 07 Aug 2021 04:26:14 GMT" :etag "W/\"610e0b66-925\"" :canonical-url "https://xkcd.com/rss.xml")) "http://planet.emacsen.org/atom.xml" #s(elfeed-feed "http://planet.emacsen.org/atom.xml" nil nil nil (:failures 6)) "http://timharford.com/feed/" #s(elfeed-feed "http://timharford.com/feed/" "http://timharford.com/feed/" "Tim Harford" nil (:failures 5 :last-modified "Thu, 05 Aug 2021 16:46:00 GMT" :etag "\"6925b2dda31a881d9962a2d20716f852\"" :canonical-url "https://timharford.com/feed/")) "http://telescoper.wordpress.com/feed/" #s(elfeed-feed "http://telescoper.wordpress.com/feed/" "http://telescoper.wordpress.com/feed/" "In the Dark" nil (:failures 5 :last-modified "Sat, 07 Aug 2021 07:34:00 GMT" :canonical-url "https://telescoper.wordpress.com/feed/")) "http://pragmaticemacs.com/feed/" #s(elfeed-feed "http://pragmaticemacs.com/feed/" "http://pragmaticemacs.com/feed/" "Pragmatic Emacs" nil (:failures 5 :last-modified "Thu, 03 May 2018 20:11:16 GMT" :etag "\"97c4ea72deaa371913e55738dfa4c3a9\"")) "http://feeds.feedburner.com/XahsEmacsBlog" #s(elfeed-feed "http://feeds.feedburner.com/XahsEmacsBlog" "http://feeds.feedburner.com/XahsEmacsBlog" "Xah Emacs Blog" ((:name "Xah Lee" :uri "http://xahlee.info/")) (:failures 5 :last-modified "Sat, 07 Aug 2021 11:27:33 GMT" :etag "AZcdnodDeABCGh6WeWThyK+y/GU")) "https://rsshub.app/zhihu/hotlist" #s(elfeed-feed "https://rsshub.app/zhihu/hotlist" "https://rsshub.app/zhihu/hotlist" "知乎热榜" nil (:last-modified "Sat, 07 Aug 2021 11:06:29 GMT" :etag "W/\"4b15d-4Djs0G0F+JiESDBmntLbvYAwr1g\"")) "https://www.ruanyifeng.com/blog/atom.xml" #s(elfeed-feed "https://www.ruanyifeng.com/blog/atom.xml" "https://www.ruanyifeng.com/blog/atom.xml" "阮一峰的网络日志" nil (:title "阮一峰的网络日志" :last-modified "Sat, 07 Aug 2021 15:31:40 GMT" :etag "W/\"15611-5c8f9d935b4fe-gzip\"")))) :entries #s(hash-table size 325 test equal rehash-size 1.5 rehash-threshold 0.8125 data (("rsshub.app" . "2045190209") #s(elfeed-entry ("rsshub.app" . "2045190209") "北京海淀人民检察院对腾讯提起民事公益诉讼，还有哪些信息值得关注？" "https://www.zhihu.com/question/477859695/answer/2045190209" 1628333404.0 #s(elfeed-ref "84c70423b03d3929d744780c50954bd422384da3") html nil nil "https://rsshub.app/zhihu/hotlist" (:authors ((:email "郭律Esq")))) ("rsshub.app" . "1725564795") #s(elfeed-entry ("rsshub.app" . "1725564795") "去除内脏脂肪，跑步是不是最好的方法？" "https://www.zhihu.com/question/427095682/answer/1725564795" 1628332330.0 #s(elfeed-ref "181d9cd74099d271b7bbd4ad4f5d89d3074e3af4") html nil nil "https://rsshub.app/zhihu/hotlist" (:authors ((:email "蟹老板(谢奕炜)")))) ("rsshub.app" . "2045148358") #s(elfeed-entry ("rsshub.app" . "2045148358") "日漫会不会像韩流一样逐渐淡出大众的视野？" "https://www.zhihu.com/question/472080432/answer/2045148358" 1628331909.0 #s(elfeed-ref "4c264050b96bc8b7e855623bf9026811d8ba075f") html nil nil "https://rsshub.app/zhihu/hotlist" (:authors ((:email "疯癫的A兵者")))) ("rsshub.app" . "2044486350") #s(elfeed-entry ("rsshub.app" . "2044486350") "已知x，y，z为正实数，则x²＋y²＋z²分之xy+yz的最大值为什么？" "https://www.zhihu.com/question/477266119/answer/2044486350" 1628327050.0 #s(elfeed-ref "e904e8bd132e873950b7a171c4dc2a96c9069a2c") html nil nil "https://rsshub.app/zhihu/hotlist" (:authors ((:email "予一人")))) ("rsshub.app" . "2044987212") #s(elfeed-entry ("rsshub.app" . "2044987212") "为什么我一个985法学高材生在沪仿佛是个废材？" "https://www.zhihu.com/question/477345946/answer/2044987212" 1628326969.0 #s(elfeed-ref "64f296475dcc0e072b214f8141b3244456618f0b") html nil nil "https://rsshub.app/zhihu/hotlist" (:authors ((:email "张宗保-深圳律师")))) ("rsshub.app" . "1786508482") #s(elfeed-entry ("rsshub.app" . "1786508482") "扫地机器人和吸尘器哪个好？" "https://www.zhihu.com/question/28710282/answer/1786508482" 1628326510.0 #s(elfeed-ref "faf8bc8d36664047a5b8c9b66e0296092acd2280") html nil nil "https://rsshub.app/zhihu/hotlist" (:authors ((:email "Momo是木木")))) ("rsshub.app" . "1840353966") #s(elfeed-entry ("rsshub.app" . "1840353966") "是不是认真准备考研的几乎都上岸了？" "https://www.zhihu.com/question/452073317/answer/1840353966" 1628324686.0 #s(elfeed-ref "f292db82fc4ea362d38cdd181d32c8791596faed") html nil nil "https://rsshub.app/zhihu/hotlist" (:authors ((:email "ferryman")))) ("rsshub.app" . "2044559411") #s(elfeed-entry ("rsshub.app" . "2044559411") "如何评价 2020 东京奥运会男篮决赛美国 87:82 胜法国实现 4 连冠？" "https://www.zhihu.com/question/477932633/answer/2044559411" 1628323103.0 #s(elfeed-ref "e47c620c685489f039e9e9971665be8b3e59a2fb") html nil nil "https://rsshub.app/zhihu/hotlist" (:authors ((:email "申屠")))) ("rsshub.app" . "2044844185") #s(elfeed-entry ("rsshub.app" . "2044844185") "8 月 6 日江苏新增本土确诊 53 例，南京 1 例扬州 52 例，1 例为重型，目前情况如何？" "https://www.zhihu.com/question/477912881/answer/2044844185" 1628322738.0 #s(elfeed-ref "140f707ddd9d332b003addf126ccb55160162af7") html nil nil "https://rsshub.app/zhihu/hotlist" (:authors ((:email "末青")))) ("rsshub.app" . "2044743145") #s(elfeed-entry ("rsshub.app" . "2044743145") "我好想要 DR，但是男朋友表示钻戒是智商税，买金好，怎么说都不行，友友们怎么看?" "https://www.zhihu.com/question/476531252/answer/2044743145" 1628319005.0 #s(elfeed-ref "5c7abe9c0657c9e1847e98265f9ab0e6900025f5") html nil nil "https://rsshub.app/zhihu/hotlist" (:authors ((:email "肆惜")))) ("rsshub.app" . "2043750102") #s(elfeed-entry ("rsshub.app" . "2043750102") "如何评价联合利华中国区副总裁曾锡文称梦龙事件是「无妄之灾」？" "https://www.zhihu.com/question/477777632/answer/2043750102" 1628318168.0 #s(elfeed-ref "f55f8a1686bc657fcec854ef02bf33b5e4c4670c") html nil nil "https://rsshub.app/zhihu/hotlist" (:authors ((:email "七边形战士")))) ("rsshub.app" . "2044532682") #s(elfeed-entry ("rsshub.app" . "2044532682") "如何看待拉波尔塔在新闻发布会上解释梅西无法续约并表示「这家俱乐部高于任何的人，即使是世界最佳球员」？" "https://www.zhihu.com/question/477798151/answer/2044532682" 1628315423.0 #s(elfeed-ref "d46c58f1c6e553b7e9f465f2f88660500e35f2a0") html nil nil "https://rsshub.app/zhihu/hotlist" (:authors ((:email "刘未来")))) ("rsshub.app" . "2044585334") #s(elfeed-entry ("rsshub.app" . "2044585334") "为什么骑很多种类的马，但是没有人骑斑马？" "https://www.zhihu.com/question/370589831/answer/2044585334" 1628314112.0 #s(elfeed-ref "00d7f4ac7353214a67ba14709b7e9a35c2b8dabd") html nil nil "https://rsshub.app/zhihu/hotlist" (:authors ((:email "BIG梦想家")))) ("rsshub.app" . "2044605764") #s(elfeed-entry ("rsshub.app" . "2044605764") "如何看待 8 月 4 日成都最新出台的第三批二手房成交参考价的通告？" "https://www.zhihu.com/question/477252191/answer/2044605764" 1628313378.0 #s(elfeed-ref "d7e157d6d87f8d6fcc23e7d9e71ab1f9a10ceebf") html nil nil "https://rsshub.app/zhihu/hotlist" (:authors ((:email "pure日月")))) ("rsshub.app" . "2044504069") #s(elfeed-entry ("rsshub.app" . "2044504069") "林书豪新冠检测呈阳性，之前曾在美国接种过疫苗，你有什么想说的？" "https://www.zhihu.com/question/477946784/answer/2044504069" 1628309430.0 #s(elfeed-ref "029148ee796bc41345d5afae9d1045ce6acf0de0") html nil nil "https://rsshub.app/zhihu/hotlist" (:authors ((:email "不正经的图个拉底")))) ("rsshub.app" . "2031798410") #s(elfeed-entry ("rsshub.app" . "2031798410") "许昕到底是一个怎样的人？" "https://www.zhihu.com/question/26562462/answer/2031798410" 1628308867.0 #s(elfeed-ref "0a8bb7d8b3baa902e7bd0d9e240a7a7cc40a1c01") html nil nil "https://rsshub.app/zhihu/hotlist" (:authors ((:email "遐依")))) ("rsshub.app" . "2044299403") #s(elfeed-entry ("rsshub.app" . "2044299403") "如何看待新冠「拉姆达」变异毒株或可逃避中和抗体？人类想要战胜疫情该怎样努力？" "https://www.zhihu.com/question/477237810/answer/2044299403" 1628302957.0 #s(elfeed-ref "d7da8bc407a21e6929d7bcae61a77573e9f19eaf") html nil nil "https://rsshub.app/zhihu/hotlist" (:authors ((:email "阿源老师")))) ("rsshub.app" . "2044074977") #s(elfeed-entry ("rsshub.app" . "2044074977") "如何看待一女子带两孩子入住上海一高级酒店后加被子被要求另付 380 元？酒店的要求是否合理？" "https://www.zhihu.com/question/477447518/answer/2044074977" 1628298786.0 #s(elfeed-ref "3246a320ef55d5afb1f84f03e80f3efe063eaf1f") html nil nil "https://rsshub.app/zhihu/hotlist" (:authors ((:email "斩魂")))) ("rsshub.app" . "2043950794") #s(elfeed-entry ("rsshub.app" . "2043950794") "如何看待英美媒体怀疑东京奥运会百米冠军雅各布斯服用兴奋剂？" "https://www.zhihu.com/question/477207139/answer/2043950794" 1628270764.0 #s(elfeed-ref "d33574937dd53e33cd74c4e04420e7cb19af1e35") html nil nil "https://rsshub.app/zhihu/hotlist" (:authors ((:email "田雨")))) ("rsshub.app" . "2043779424") #s(elfeed-entry ("rsshub.app" . "2043779424") "水谷隼宣布因眼疾退役，本届奥运会他在混双项目中拿下金牌，如何评价他的乒乓球生涯？" "https://www.zhihu.com/question/477818815/answer/2043779424" 1628262727.0 #s(elfeed-ref "000a44d227eaa7b1858e7d035d040ab9d3db1706") html nil nil "https://rsshub.app/zhihu/hotlist" (:authors ((:email "叶子盛")))) ("rsshub.app" . "2034513415") #s(elfeed-entry ("rsshub.app" . "2034513415") "普通人能接住马龙的发球吗?" "https://www.zhihu.com/question/365520167/answer/2034513415" 1628260900.0 #s(elfeed-ref "138bb1b033a00aa0d9fac2a2a7439bf23554f68a") html nil nil "https://rsshub.app/zhihu/hotlist" (:authors ((:email "房狱麟")))) ("rsshub.app" . "2043712720") #s(elfeed-entry ("rsshub.app" . "2043712720") "如何看待东京奥运男子 4×100 中国队四人摆出《龙珠》龟派气功的姿势出场？" "https://www.zhihu.com/question/477848798/answer/2043712720" 1628260427.0 #s(elfeed-ref "9a158d5b871c0610d3e6280bc2d3d97ebdace837") html nil nil "https://rsshub.app/zhihu/hotlist" (:authors ((:email "许多的小兵器")))) ("rsshub.app" . "2043411044") #s(elfeed-entry ("rsshub.app" . "2043411044") "iPhone 在很多数据上都比不过友商，但是什么造就了超高的销售量?" "https://www.zhihu.com/question/476745626/answer/2043411044" 1628254924.0 #s(elfeed-ref "ce382ffdd39884216e6f49300b5945cb8f4ad170") html nil nil "https://rsshub.app/zhihu/hotlist" (:authors ((:email "Lawrence")))) ("rsshub.app" . "2043156577") #s(elfeed-entry ("rsshub.app" . "2043156577") "哪些是你装修后才发现并不实用的东西？" "https://www.zhihu.com/question/472318638/answer/2043156577" 1628241254.0 #s(elfeed-ref "351fc9f3e54bf0c8fc8983069b8ef1f8e8027458") html nil nil "https://rsshub.app/zhihu/hotlist" (:authors ((:email "设计师-筱筱萱")))) ("rsshub.app" . "2042783490") #s(elfeed-entry ("rsshub.app" . "2042783490") "给定剧本后，演员发挥的余地在哪里？" "https://www.zhihu.com/question/61957015/answer/2042783490" 1628231431.0 #s(elfeed-ref "bd83c3ac5d84fc1d6503d15d2349d202b0bbb470") html nil nil "https://rsshub.app/zhihu/hotlist" (:authors ((:email "一个周")))) ("rsshub.app" . "2042761115") #s(elfeed-entry ("rsshub.app" . "2042761115") "去相亲，相亲女说要至少半年的考察期，什么是考察期？" "https://www.zhihu.com/question/477499318/answer/2042761115" 1628230990.0 #s(elfeed-ref "d6bb5752129d656c7b7f62b935cf3d13d6fbc6fd") html nil nil "https://rsshub.app/zhihu/hotlist" (:authors ((:email "青鸟")))) ("rsshub.app" . "2041797664") #s(elfeed-entry ("rsshub.app" . "2041797664") "《原神》这样的二次元游戏是否能宣传中国文化？" "https://www.zhihu.com/question/476832017/answer/2041797664" 1628181844.0 #s(elfeed-ref "b0b8e83aceae3e229778fddf4fd93dd9bb168c9f") html nil nil "https://rsshub.app/zhihu/hotlist" (:authors ((:email "dhchen")))) ("rsshub.app" . "2041670320") #s(elfeed-entry ("rsshub.app" . "2041670320") "中国乒乓球为什么那么强？" "https://www.zhihu.com/question/275586605/answer/2041670320" 1628176538.0 #s(elfeed-ref "e993be9deb64746a086af94db46504a64ff24c63") html nil nil "https://rsshub.app/zhihu/hotlist" (:authors ((:email "张艾菲")))) ("rsshub.app" . "2041385784") #s(elfeed-entry ("rsshub.app" . "2041385784") "为什么有的人待人冷漠无情反而朋友更多？" "https://www.zhihu.com/question/270794084/answer/2041385784" 1628167415.0 #s(elfeed-ref "3548a94d66b4c0a1033c85edafb6f0de2d95eed8") html nil nil "https://rsshub.app/zhihu/hotlist" (:authors ((:email "红护")))) ("rsshub.app" . "2040765147") #s(elfeed-entry ("rsshub.app" . "2040765147") "大理苍山景区女子坠百米悬崖幸挂树枝，户外旅游该如何有序发展减少风险？" "https://www.zhihu.com/question/477425652/answer/2040765147" 1628151837.0 #s(elfeed-ref "b30050150fc5105444227a607cfdab1c61a820f2") html nil nil "https://rsshub.app/zhihu/hotlist" (:authors ((:email "平老虎")))) ("rsshub.app" . "2039391392") #s(elfeed-entry ("rsshub.app" . "2039391392") "如何看待 2021 年 6 月下旬小米手机超越三星成为世界第一？" "https://www.zhihu.com/question/477320880/answer/2039391392" 1628083817.0 #s(elfeed-ref "9effbdccf86c9319b3234b6ea6045f8172f022fa") html nil nil "https://rsshub.app/zhihu/hotlist" (:authors ((:email "ssertp")))) ("rsshub.app" . "2038416727") #s(elfeed-entry ("rsshub.app" . "2038416727") "刚毕业就考进编制，但什么也学不到工资还低，要不要辞职？" "https://www.zhihu.com/question/477127718/answer/2038416727" 1628054567.0 #s(elfeed-ref "e7e05708785f443ade4f01dba52fedc67cdeaee3") html nil nil "https://rsshub.app/zhihu/hotlist" (:authors ((:email "德音不忘")))) ("rsshub.app" . "2038124226") #s(elfeed-entry ("rsshub.app" . "2038124226") "单亲妈妈带着儿子，是不是很难再婚？" "https://www.zhihu.com/question/473240490/answer/2038124226" 1628045917.0 #s(elfeed-ref "c20853f506eb2cd1f61e8e776974b823adc1a825") html nil nil "https://rsshub.app/zhihu/hotlist" (:authors ((:email "一叶知秋")))) ("rsshub.app" . "2035966343") #s(elfeed-entry ("rsshub.app" . "2035966343") "有没有好看到不舍得换掉的头像?" "https://www.zhihu.com/question/444911898/answer/2035966343" 1627971699.0 #s(elfeed-ref "f1b046c4bac02ded00596f8cf424e799febcbd91") html nil nil "https://rsshub.app/zhihu/hotlist" (:authors ((:email "绘画徐老师")))) ("rsshub.app" . "2035905245") #s(elfeed-entry ("rsshub.app" . "2035905245") "为什么任天堂明明有能力，却把《塞尔达传说：旷野之息》的大精灵设计得这么丑？" "https://www.zhihu.com/question/476804537/answer/2035905245" 1627956933.0 #s(elfeed-ref "5d37a8b7292ebf2ab0489ea82dbe6b9d44fe5cdd") html nil nil "https://rsshub.app/zhihu/hotlist" (:authors ((:email "嘉美尤")))) ("rsshub.app" . "2020039447") #s(elfeed-entry ("rsshub.app" . "2020039447") "一个人有多少存款，才能避免生存焦虑？" "https://www.zhihu.com/question/391300078/answer/2020039447" 1627263379.0 #s(elfeed-ref "c6a7851b713236b238a36f0ab6ca808bb16cd01c") html nil nil "https://rsshub.app/zhihu/hotlist" (:authors ((:email "温酒")))) ("rsshub.app" . "1982350013") #s(elfeed-entry ("rsshub.app" . "1982350013") "有没有短一点的先婚后爱小甜文？" "https://www.zhihu.com/question/425137776/answer/1982350013" 1626739753.0 #s(elfeed-ref "46234543fa72fb06d2ccef50342943965195a826") html nil nil "https://rsshub.app/zhihu/hotlist" (:authors ((:email "溺海")))) ("rsshub.app" . "1993071728") #s(elfeed-entry ("rsshub.app" . "1993071728") "有哪些跑了才知道的绝妙体验？" "https://www.zhihu.com/question/470573894/answer/1993071728" 1626060837.0 #s(elfeed-ref "1623eb7c12b2a0b8ac999f76e7005c0f9eb6ac0a") html nil nil "https://rsshub.app/zhihu/hotlist" (:authors ((:email "Seeker")))) ("rsshub.app" . "1956527212") #s(elfeed-entry ("rsshub.app" . "1956527212") "冷暴力的人没心吗？" "https://www.zhihu.com/question/461127629/answer/1956527212" 1624614900.0 #s(elfeed-ref "6387c8e162e935aecce0047fe7e2b0684d742501") html nil nil "https://rsshub.app/zhihu/hotlist" (:authors ((:email "三条鱼")))) ("rsshub.app" . "941760510") #s(elfeed-entry ("rsshub.app" . "941760510") "什么都不会的应届生怎么找工作？" "https://www.zhihu.com/question/63305198/answer/941760510" 1582823783.0 #s(elfeed-ref "5a74862c7afcae890439d8170f16eb8d302d36ab") html nil (unread) "https://rsshub.app/zhihu/hotlist" (:authors ((:email "王子段")))) ("xkcd.com" . "https://xkcd.com/2499/") #s(elfeed-entry ("xkcd.com" . "https://xkcd.com/2499/") "Abandonment Function" "https://xkcd.com/2499/" 1628222400.0 #s(elfeed-ref "eb161ec234b6805affcd3abddc7d167e6a7ca8a4") html nil (daily) "http://xkcd.com/rss.xml" nil) ("xkcd.com" . "https://xkcd.com/2498/") #s(elfeed-entry ("xkcd.com" . "https://xkcd.com/2498/") "Forest Walk" "https://xkcd.com/2498/" 1628049600.0 #s(elfeed-ref "4f9ef9b2673b821f0b934b5a3101df8f8dc164b8") html nil (daily) "http://xkcd.com/rss.xml" nil) ("xkcd.com" . "https://xkcd.com/2497/") #s(elfeed-entry ("xkcd.com" . "https://xkcd.com/2497/") "Logic Gates" "https://xkcd.com/2497/" 1627876800.0 #s(elfeed-ref "aaab96fb80f37698b412d4029ed3b1a0f38f4cd5") html nil (daily) "http://xkcd.com/rss.xml" nil) ("xkcd.com" . "https://xkcd.com/2496/") #s(elfeed-entry ("xkcd.com" . "https://xkcd.com/2496/") "Mine Captcha" "https://xkcd.com/2496/" 1627617600.0 #s(elfeed-ref "580b373769536a347bb8933a076e0b400a116cec") html nil (daily) "http://xkcd.com/rss.xml" nil) ("emacs.stackexchange.com" . "https://emacs.stackexchange.com/q/68001") #s(elfeed-entry ("emacs.stackexchange.com" . "https://emacs.stackexchange.com/q/68001") "Export as nested lists instead of (sub)sections with org mode" "https://emacs.stackexchange.com/questions/68001/export-as-nested-lists-instead-of-subsections-with-org-mode" 1628333874.0 #s(elfeed-ref "ca1a172f436d0682a462aa55279d91e2c0206a10") html nil (emacs) "http://emacs.stackexchange.com/feeds" (:authors ((:name "student" :uri "https://emacs.stackexchange.com/users/2323")) :categories ("org-mode" "org-export" "latex"))) ("emacs.stackexchange.com" . "https://emacs.stackexchange.com/q/67999") #s(elfeed-entry ("emacs.stackexchange.com" . "https://emacs.stackexchange.com/q/67999") "refresh org agenda (org-agenda-redo) scrolls buffer by 1 line" "https://emacs.stackexchange.com/questions/67999/refresh-org-agenda-org-agenda-redo-scrolls-buffer-by-1-line" 1628327190.0 #s(elfeed-ref "e4c4edf4379aa8e873b4ba7b4a597cd6673f5d57") html nil (emacs) "http://emacs.stackexchange.com/feeds" (:authors ((:name "uselpa" :uri "https://emacs.stackexchange.com/users/15131")) :categories ("org-mode"))) ("emacs.stackexchange.com" . "https://emacs.stackexchange.com/q/67998") #s(elfeed-entry ("emacs.stackexchange.com" . "https://emacs.stackexchange.com/q/67998") "org-capture header nesting levels" "https://emacs.stackexchange.com/questions/67998/org-capture-header-nesting-levels" 1628318171.0 #s(elfeed-ref "f85d94f8e7a4714b49dc36b624e25ee523969287") html nil (emacs) "http://emacs.stackexchange.com/feeds" (:authors ((:name "JonathanPeel" :uri "https://emacs.stackexchange.com/users/29812")) :categories ("org-mode" "org-capture"))) ("emacs.stackexchange.com" . "https://emacs.stackexchange.com/q/67996") #s(elfeed-entry ("emacs.stackexchange.com" . "https://emacs.stackexchange.com/q/67996") "I do not want a TAGS table, flaky elpy-goto-definition" "https://emacs.stackexchange.com/questions/67996/i-do-not-want-a-tags-table-flaky-elpy-goto-definition" 1628295633.0 #s(elfeed-ref "3eb0f0cdc72c4c2064880a6af7cd02ad56a39c05") html nil (emacs) "http://emacs.stackexchange.com/feeds" (:authors ((:name "Mittenchops" :uri "https://emacs.stackexchange.com/users/15646")) :categories ("python" "elpy"))) ("emacs.stackexchange.com" . "https://emacs.stackexchange.com/q/67994") #s(elfeed-entry ("emacs.stackexchange.com" . "https://emacs.stackexchange.com/q/67994") "How to export a table as a Markdown table when using org-md-export-to-markdown?" "https://emacs.stackexchange.com/questions/67994/how-to-export-a-table-as-a-markdown-table-when-using-org-md-export-to-markdown" 1628286221.0 #s(elfeed-ref "9e656f1d47e4baf5e97deda193cdae4bbe111139") html nil (emacs) "http://emacs.stackexchange.com/feeds" (:authors ((:name "Rodrigo Morales" :uri "https://emacs.stackexchange.com/users/31625")) :categories ("org-export" "markdown"))) ("emacs.stackexchange.com" . "https://emacs.stackexchange.com/q/67992") #s(elfeed-entry ("emacs.stackexchange.com" . "https://emacs.stackexchange.com/q/67992") "How to perform query-replace excluding LaTeX math?" "https://emacs.stackexchange.com/questions/67992/how-to-perform-query-replace-excluding-latex-math" 1628240355.0 #s(elfeed-ref "5ad7af8d822b853df89b0f6499a598122c611e9f") html nil (emacs) "http://emacs.stackexchange.com/feeds" (:authors ((:name "Onner Irotsab" :uri "https://emacs.stackexchange.com/users/19047")) :categories ("latex" "query-replace"))) ("emacs.stackexchange.com" . "https://emacs.stackexchange.com/q/67991") #s(elfeed-entry ("emacs.stackexchange.com" . "https://emacs.stackexchange.com/q/67991") "How to enable yasnippets for all modes?" "https://emacs.stackexchange.com/questions/67991/how-to-enable-yasnippets-for-all-modes" 1628233559.0 #s(elfeed-ref "3aeb2b91bc937c3ebf88d2a37e96363badbfcc86") html nil (emacs) "http://emacs.stackexchange.com/feeds" (:authors ((:name "jjk" :uri "https://emacs.stackexchange.com/users/21118")) :categories ("yasnippet"))) ("emacs.stackexchange.com" . "https://emacs.stackexchange.com/q/67988") #s(elfeed-entry ("emacs.stackexchange.com" . "https://emacs.stackexchange.com/q/67988") "undo-tree is not able to load the latest changes from previous emacs daemon session" "https://emacs.stackexchange.com/questions/67988/undo-tree-is-not-able-to-load-the-latest-changes-from-previous-emacs-daemon-sess" 1628199946.0 #s(elfeed-ref "812cc304e5f93a240fb4ae1f3f084493b4bbf520") html nil (emacs) "http://emacs.stackexchange.com/feeds" (:authors ((:name "alper" :uri "https://emacs.stackexchange.com/users/18414")) :categories ("undo-tree-mode"))) ("emacs.stackexchange.com" . "https://emacs.stackexchange.com/q/67986") #s(elfeed-entry ("emacs.stackexchange.com" . "https://emacs.stackexchange.com/q/67986") "Storing Database Authentication Details Securely" "https://emacs.stackexchange.com/questions/67986/storing-database-authentication-details-securely" 1628195943.0 #s(elfeed-ref "9eb8a098805c826fce7eab3b3c3d89cf0f1554fa") html nil (emacs) "http://emacs.stackexchange.com/feeds" (:authors ((:name "Phil" :uri "https://emacs.stackexchange.com/users/17300")) :categories ("gpg" "sql" "emacs27" "sql-interactive-mode" "authinfo"))) ("emacs.stackexchange.com" . "https://emacs.stackexchange.com/q/67985") #s(elfeed-entry ("emacs.stackexchange.com" . "https://emacs.stackexchange.com/q/67985") "How to create shell aliases in Emacs [GUI] in Windows?" "https://emacs.stackexchange.com/questions/67985/how-to-create-shell-aliases-in-emacs-gui-in-windows" 1628195430.0 #s(elfeed-ref "11bac15ced31235052731bbc4a553c865d9631fc") html nil (emacs) "http://emacs.stackexchange.com/feeds" (:authors ((:name "W.M." :uri "https://emacs.stackexchange.com/users/35756")) :categories ("microsoft-windows" "shell" "gui-emacs" "aliases"))) ("emacs.stackexchange.com" . "https://emacs.stackexchange.com/q/67984") #s(elfeed-entry ("emacs.stackexchange.com" . "https://emacs.stackexchange.com/q/67984") "How to change visual appearance of ANSI colors for *shell* buffers running on \"GUI Emacs\"?" "https://emacs.stackexchange.com/questions/67984/how-to-change-visual-appearance-of-ansi-colors-for-shell-buffers-running-on-g" 1628183197.0 #s(elfeed-ref "f0c65c7f6232df05d226961123c0a3b5166162b9") html nil (emacs) "http://emacs.stackexchange.com/feeds" (:authors ((:name "kjo" :uri "https://emacs.stackexchange.com/users/882")) :categories ("colors" "ansi"))) ("emacs.stackexchange.com" . "https://emacs.stackexchange.com/q/67972") #s(elfeed-entry ("emacs.stackexchange.com" . "https://emacs.stackexchange.com/q/67972") "Org mode: How to escape the # character in a table formula" "https://emacs.stackexchange.com/questions/67972/org-mode-how-to-escape-the-character-in-a-table-formula" 1628159845.0 #s(elfeed-ref "c476c944db8f2a12badfa7b3ba57a5d3543f6789") html nil (emacs) "http://emacs.stackexchange.com/feeds" (:authors ((:name "Nicryc" :uri "https://emacs.stackexchange.com/users/35686")) :categories ("org-mode" "org-table" "escape" "formula"))) ("emacs.stackexchange.com" . "https://emacs.stackexchange.com/q/66593") #s(elfeed-entry ("emacs.stackexchange.com" . "https://emacs.stackexchange.com/q/66593") "How to open a link to a folder/file in Finder, not Dired" "https://emacs.stackexchange.com/questions/66593/how-to-open-a-link-to-a-folder-file-in-finder-not-dired" 1625478960.0 #s(elfeed-ref "e6f1143c2627f92834a4e5ab9a0238f64ccb6fee") html nil (emacs) "http://emacs.stackexchange.com/feeds" (:authors ((:name "Adelita" :uri "https://emacs.stackexchange.com/users/34421")) :categories ("org-mode" "osx"))) ("emacs.stackexchange.com" . "https://emacs.stackexchange.com/q/63802") #s(elfeed-entry ("emacs.stackexchange.com" . "https://emacs.stackexchange.com/q/63802") "Cannot use `pbpaste` in Emacs to paste Chinese characters" "https://emacs.stackexchange.com/questions/63802/cannot-use-pbpaste-in-emacs-to-paste-chinese-characters" 1615272963.0 #s(elfeed-ref "5f167e1b83a6b0f4698525ddf33982e30d804868") html nil (emacs) "http://emacs.stackexchange.com/feeds" (:authors ((:name "Searene" :uri "https://emacs.stackexchange.com/users/13969")) :categories ("process" "character-encoding" "clipboard"))) ("emacs.stackexchange.com" . "https://emacs.stackexchange.com/q/61775") #s(elfeed-entry ("emacs.stackexchange.com" . "https://emacs.stackexchange.com/q/61775") "Is there a gccemacs (native-comp) build for MS-Windows?" "https://emacs.stackexchange.com/questions/61775/is-there-a-gccemacs-native-comp-build-for-ms-windows" 1605544087.0 #s(elfeed-ref "64198cd37399b6ab8556fad41bbe9b69fd572b42") html nil (emacs unread) "http://emacs.stackexchange.com/feeds" (:authors ((:name "JFM" :uri "https://emacs.stackexchange.com/users/2011")) :categories ("microsoft-windows" "gccemacs"))) ("emacs.stackexchange.com" . "https://emacs.stackexchange.com/q/61687") #s(elfeed-entry ("emacs.stackexchange.com" . "https://emacs.stackexchange.com/q/61687") "How can I move/kill multiple chunks of text to the same place/marker, one after another?" "https://emacs.stackexchange.com/questions/61687/how-can-i-move-kill-multiple-chunks-of-text-to-the-same-place-marker-one-after" 1605125223.0 #s(elfeed-ref "a8ab8241213f3ec6412cf2f012e2550b32f9265b") html nil (emacs unread) "http://emacs.stackexchange.com/feeds" (:authors ((:name "aaa" :uri "https://emacs.stackexchange.com/users/19988")) :categories ("org-mode" "kill-text"))) ("emacs.stackexchange.com" . "https://emacs.stackexchange.com/q/60866") #s(elfeed-entry ("emacs.stackexchange.com" . "https://emacs.stackexchange.com/q/60866") "How do I display links in a mu4E message at the end of the text" "https://emacs.stackexchange.com/questions/60866/how-do-i-display-links-in-a-mu4e-message-at-the-end-of-the-text" 1601231366.0 #s(elfeed-ref "345a739631b665b6cbe969d90e9c4dee4b421f52") html nil (emacs unread) "http://emacs.stackexchange.com/feeds" (:authors ((:name "Flame Bearer" :uri "https://emacs.stackexchange.com/users/30287")) :categories ("mu4e"))) ("emacs.stackexchange.com" . "https://emacs.stackexchange.com/q/56036") #s(elfeed-entry ("emacs.stackexchange.com" . "https://emacs.stackexchange.com/q/56036") "Portable way of setting the windows urgent hint?" "https://emacs.stackexchange.com/questions/56036/portable-way-of-setting-the-windows-urgent-hint" 1583799873.0 #s(elfeed-ref "37706f34e1a9618e5aa32d296019e6a4dda9b641") html nil (emacs unread) "http://emacs.stackexchange.com/feeds" (:authors ((:name "ideasman42" :uri "https://emacs.stackexchange.com/users/2418")) :categories ("window" "frames"))) ("emacs.stackexchange.com" . "https://emacs.stackexchange.com/q/55520") #s(elfeed-entry ("emacs.stackexchange.com" . "https://emacs.stackexchange.com/q/55520") "hand draw arrow in pdf-tools" "https://emacs.stackexchange.com/questions/55520/hand-draw-arrow-in-pdf-tools" 1581635657.0 #s(elfeed-ref "2fe4d2390d9bc14d64f33d4cdc507beaaf2f9e4c") html nil (emacs unread) "http://emacs.stackexchange.com/feeds" (:authors ((:name "Vikram" :uri "https://emacs.stackexchange.com/users/26558")) :categories ("pdf-tools"))) ("emacs.stackexchange.com" . "https://emacs.stackexchange.com/q/51716") #s(elfeed-entry ("emacs.stackexchange.com" . "https://emacs.stackexchange.com/q/51716") "Spacemacs Clojure Cider Debugger Gives Error, \"No reader function for tag dbg\"" "https://emacs.stackexchange.com/questions/51716/spacemacs-clojure-cider-debugger-gives-error-no-reader-function-for-tag-dbg" 1563490271.0 #s(elfeed-ref "1132de67fd10a850b91fc2666aa269cead066d37") html nil (emacs unread) "http://emacs.stackexchange.com/feeds" (:authors ((:name "Nathan Wilkinson" :uri "https://emacs.stackexchange.com/users/23985")) :categories ("spacemacs" "cider"))) ("emacs.stackexchange.com" . "https://emacs.stackexchange.com/q/44810") #s(elfeed-entry ("emacs.stackexchange.com" . "https://emacs.stackexchange.com/q/44810") "Can I get whitespace-mode to display a sequence of two leading spaces , specially?" "https://emacs.stackexchange.com/questions/44810/can-i-get-whitespace-mode-to-display-a-sequence-of-two-leading-spaces-speciall" 1537321744.0 #s(elfeed-ref "afb20e3d89f05705a6c230bf26dad3655bff33ed") html nil (emacs unread) "http://emacs.stackexchange.com/feeds" (:authors ((:name "Cheeso" :uri "https://emacs.stackexchange.com/users/3856")) :categories ("whitespace"))) ("emacs.stackexchange.com" . "https://emacs.stackexchange.com/q/42133") #s(elfeed-entry ("emacs.stackexchange.com" . "https://emacs.stackexchange.com/q/42133") "projectile-find-file and ivy - create file with subdirectories" "https://emacs.stackexchange.com/questions/42133/projectile-find-file-and-ivy-create-file-with-subdirectories" 1529503986.0 #s(elfeed-ref "98cb965921e83f1ffe6b619d4b03bcffd488902f") html nil (emacs unread) "http://emacs.stackexchange.com/feeds" (:authors ((:name "rofrol" :uri "https://emacs.stackexchange.com/users/19475")) :categories ("projectile" "ivy"))) ("emacs.stackexchange.com" . "https://emacs.stackexchange.com/q/38603") #s(elfeed-entry ("emacs.stackexchange.com" . "https://emacs.stackexchange.com/q/38603") "How to group digits in minibuffer when sending input to calc?" "https://emacs.stackexchange.com/questions/38603/how-to-group-digits-in-minibuffer-when-sending-input-to-calc" 1517756560.0 #s(elfeed-ref "3e2525621d37536fa3edf27a006195d65ac5ba8c") html nil (emacs unread) "http://emacs.stackexchange.com/feeds" (:authors ((:name "Name" :uri "https://emacs.stackexchange.com/users/2609")) :categories ("calc"))) ("emacs.stackexchange.com" . "https://emacs.stackexchange.com/q/37716") #s(elfeed-entry ("emacs.stackexchange.com" . "https://emacs.stackexchange.com/q/37716") "Automatically open the exported file as soon as `org-export-dispatch` succeeds" "https://emacs.stackexchange.com/questions/37716/automatically-open-the-exported-file-as-soon-as-org-export-dispatch-succeeds" 1514135159.0 #s(elfeed-ref "8a1901422b95d8509e38c3861953f7438936bae3") html nil (emacs unread) "http://emacs.stackexchange.com/feeds" (:authors ((:name "AlwaysLearning" :uri "https://emacs.stackexchange.com/users/16048")) :categories ("org-export"))) ("emacs.stackexchange.com" . "https://emacs.stackexchange.com/q/36184") #s(elfeed-entry ("emacs.stackexchange.com" . "https://emacs.stackexchange.com/q/36184") "compilation-scroll-output doesn't work if *compilation* buffer is created by hand" "https://emacs.stackexchange.com/questions/36184/compilation-scroll-output-doesnt-work-if-compilation-buffer-is-created-by-han" 1508135851.0 #s(elfeed-ref "4cbd539f64b8c5109d52e0f136abc8cf4e3dbd2f") html nil (emacs unread) "http://emacs.stackexchange.com/feeds" (:authors ((:name "Louis Roché" :uri "https://emacs.stackexchange.com/users/17195")) :categories ("compilation" "compile-mode"))) ("emacs.stackexchange.com" . "https://emacs.stackexchange.com/q/34868") #s(elfeed-entry ("emacs.stackexchange.com" . "https://emacs.stackexchange.com/q/34868") "(How) can I emulate {eshell,comint}-output-filter-functions in term?" "https://emacs.stackexchange.com/questions/34868/how-can-i-emulate-eshell-comint-output-filter-functions-in-term" 1502665197.0 #s(elfeed-ref "daf6fc08b4030cf52152a28960462f2ab3f8b5bf") html nil (emacs unread) "http://emacs.stackexchange.com/feeds" (:authors ((:name "rocky" :uri "https://emacs.stackexchange.com/users/5163")) :categories ("hooks" "eshell" "term" "comint"))) ("emacs.stackexchange.com" . "https://emacs.stackexchange.com/q/27765") #s(elfeed-entry ("emacs.stackexchange.com" . "https://emacs.stackexchange.com/q/27765") "Get a better printed representation of a hash-table" "https://emacs.stackexchange.com/questions/27765/get-a-better-printed-representation-of-a-hash-table" 1476301206.0 #s(elfeed-ref "2bcea95412387b579d5ccace9d68d66b6bda6dd8") html nil (emacs unread) "http://emacs.stackexchange.com/feeds" (:authors ((:name "dag" :uri "https://emacs.stackexchange.com/users/13632")) :categories ("print" "hash-tables"))) ("emacs.stackexchange.com" . "https://emacs.stackexchange.com/q/18973") #s(elfeed-entry ("emacs.stackexchange.com" . "https://emacs.stackexchange.com/q/18973") "How do I expand the region-beginning and region-end?" "https://emacs.stackexchange.com/questions/18973/how-do-i-expand-the-region-beginning-and-region-end" 1450592204.0 #s(elfeed-ref "f0e12d4bc3e83d88e75ecd263e0b4050fdb9b10c") html nil (emacs unread) "http://emacs.stackexchange.com/feeds" (:authors ((:name "tom" :uri "https://emacs.stackexchange.com/users/10417")) :categories ("region"))) ("emacs.stackexchange.com" . "https://emacs.stackexchange.com/q/14537") #s(elfeed-entry ("emacs.stackexchange.com" . "https://emacs.stackexchange.com/q/14537") "Terminal Emacs not receiving <wheel-up> or <wheel-down>?" "https://emacs.stackexchange.com/questions/14537/terminal-emacs-not-receiving-wheel-up-or-wheel-down" 1438910632.0 #s(elfeed-ref "6caa32a44262ddbea56ddf4208824f3130a16446") html nil (emacs unread) "http://emacs.stackexchange.com/feeds" (:authors ((:name "Zhro" :uri "https://emacs.stackexchange.com/users/9103")) :categories ("scrolling" "mouse"))) ("emacs.stackexchange.com" . "https://emacs.stackexchange.com/q/12086") #s(elfeed-entry ("emacs.stackexchange.com" . "https://emacs.stackexchange.com/q/12086") "High CPU/memory usage and abnormally large savehist file?" "https://emacs.stackexchange.com/questions/12086/high-cpu-memory-usage-and-abnormally-large-savehist-file" 1430635503.0 #s(elfeed-ref "87aa32541be089a8ca479185f096bf06573929de") html nil (emacs unread) "http://emacs.stackexchange.com/feeds" (:authors ((:name "xji" :uri "https://emacs.stackexchange.com/users/7097")) :categories ("spacemacs" "history" "history-variables" "savehist-mode"))) ("feeds.feedburner.com" . "tag:xahlee,2021-08-05:191354") #s(elfeed-entry ("feeds.feedburner.com" . "tag:xahlee,2021-08-05:191354") "XahTV 2021-08-03 emacs packages, CSS, command naming bash vs PowerShell, history of Wikipedia" "http://feedproxy.google.com/~r/XahsEmacsBlog/~3/ENHPco0P708/xah_talk_show_2021-08-03.html" 1628165633.0 #s(elfeed-ref "cc8285cd1733739d96efd482b1a4e82d64987f7b") html nil (emacs) "http://feeds.feedburner.com/XahsEmacsBlog" nil) ("feeds.feedburner.com" . "tag:xahlee,2021-08-03:031619") #s(elfeed-entry ("feeds.feedburner.com" . "tag:xahlee,2021-08-03:031619") "new screenshots and other updates." "http://feedproxy.google.com/~r/XahsEmacsBlog/~3/8oIchJEBI1w/blog.html" 1627935378.0 #s(elfeed-ref "f06d59a77ba95f72a2801ff339dd7e8d4d180a9e") html nil (emacs) "http://feeds.feedburner.com/XahsEmacsBlog" nil) ("feeds.feedburner.com" . "tag:xahlee,2021-08-01:202720") #s(elfeed-entry ("feeds.feedburner.com" . "tag:xahlee,2021-08-01:202720") "Elisp: Reformat to Sentence Lines" "http://feedproxy.google.com/~r/XahsEmacsBlog/~3/8oIchJEBI1w/blog.html" 1627824439.0 #s(elfeed-ref "546f3eb5f46501c03bf2b44a53bd01791f4c0487") html nil (emacs) "http://feeds.feedburner.com/XahsEmacsBlog" nil) ("feeds.feedburner.com" . "tag:xahlee,2021-08-01:013859") #s(elfeed-entry ("feeds.feedburner.com" . "tag:xahlee,2021-08-01:013859") "massive updates. work on elisp whole day." "http://feedproxy.google.com/~r/XahsEmacsBlog/~3/8oIchJEBI1w/blog.html" 1627756738.0 #s(elfeed-ref "062613231d6083670efd1ec48a0eb60dee735bc2") html nil (emacs) "http://feeds.feedburner.com/XahsEmacsBlog" nil) ("feeds.feedburner.com" . "tag:xahlee,2021-07-26:152558") #s(elfeed-entry ("feeds.feedburner.com" . "tag:xahlee,2021-07-26:152558") "XahTV 📺" "http://feedproxy.google.com/~r/XahsEmacsBlog/~3/sRWxcdYywis/xah_talk_show_index.html" 1627287957.0 #s(elfeed-ref "288c3c0b51887e8c261d1370cc3efe3471a6ef12") html nil (emacs) "http://feeds.feedburner.com/XahsEmacsBlog" nil) ("feeds.feedburner.com" . "tag:xahlee,2021-07-26:152548") #s(elfeed-entry ("feeds.feedburner.com" . "tag:xahlee,2021-07-26:152548") "Elisp: Syntax Table" "http://feedproxy.google.com/~r/XahsEmacsBlog/~3/KMUb6YwgZdM/elisp_syntax_table.html" 1627287947.0 #s(elfeed-ref "0de72975269ea7fc74386ac62f5d96cc8c3f7f46") html nil (emacs) "http://feeds.feedburner.com/XahsEmacsBlog" nil) ("feeds.feedburner.com" . "tag:xahlee,2021-07-20:190803") #s(elfeed-entry ("feeds.feedburner.com" . "tag:xahlee,2021-07-20:190803") "more massive updates." "http://feedproxy.google.com/~r/XahsEmacsBlog/~3/8oIchJEBI1w/blog.html" 1626782882.0 #s(elfeed-ref "6cba8451f4e83076928a825186d715f3867a42ab") html nil (emacs) "http://feeds.feedburner.com/XahsEmacsBlog" nil) ("feeds.feedburner.com" . "tag:xahlee,2021-07-20:155231") #s(elfeed-entry ("feeds.feedburner.com" . "tag:xahlee,2021-07-20:155231") "site UI change. move xah commands to elisp example." "http://feedproxy.google.com/~r/XahsEmacsBlog/~3/8oIchJEBI1w/blog.html" 1626771150.0 #s(elfeed-ref "57109ab7d3f764a1fbe8812aaaf68f6844f57438") html nil (emacs) "http://feeds.feedburner.com/XahsEmacsBlog" nil) ("feeds.feedburner.com" . "tag:xahlee,2021-07-20:155142") #s(elfeed-entry ("feeds.feedburner.com" . "tag:xahlee,2021-07-20:155142") "update 2021-07-19." "http://feedproxy.google.com/~r/XahsEmacsBlog/~3/8oIchJEBI1w/blog.html" 1626771101.0 #s(elfeed-ref "af6a0d0c8ab0834c2f0d165926d28c77e654a48d") html nil (emacs) "http://feeds.feedburner.com/XahsEmacsBlog" nil) ("feeds.feedburner.com" . "tag:xahlee,2021-07-19:203125") #s(elfeed-entry ("feeds.feedburner.com" . "tag:xahlee,2021-07-19:203125") "updated, big and small." "http://feedproxy.google.com/~r/XahsEmacsBlog/~3/8oIchJEBI1w/blog.html" 1626701484.0 #s(elfeed-ref "917948eef18a856f64f605ff53db3e3f4a42bc00") html nil (emacs) "http://feeds.feedburner.com/XahsEmacsBlog" nil) ("feeds.feedburner.com" . "tag:xahlee,2021-07-19:203114") #s(elfeed-entry ("feeds.feedburner.com" . "tag:xahlee,2021-07-19:203114") "Emacs: Mouse Config" "http://feedproxy.google.com/~r/XahsEmacsBlog/~3/O-JUWUqQLCA/emacs_mouse_wheel_config.html" 1626701473.0 #s(elfeed-ref "2f8c4c082e306cb68fe2bcc1dfee013477cc47dd") html nil (emacs) "http://feeds.feedburner.com/XahsEmacsBlog" nil) ("feeds.feedburner.com" . "tag:xahlee,2021-07-14:201250") #s(elfeed-entry ("feeds.feedburner.com" . "tag:xahlee,2021-07-14:201250") "elisp working with char" "http://feedproxy.google.com/~r/XahsEmacsBlog/~3/8oIchJEBI1w/blog.html" 1626268369.0 #s(elfeed-ref "005a198027ad8efcb4a695455399b14165985072") html nil (emacs) "http://feeds.feedburner.com/XahsEmacsBlog" nil) ("feeds.feedburner.com" . "tag:xahlee,2021-07-14:071548") #s(elfeed-entry ("feeds.feedburner.com" . "tag:xahlee,2021-07-14:071548") "GNU Pepe" "http://feedproxy.google.com/~r/XahsEmacsBlog/~3/thsMuH--iZ0/gnu_pepe.html" 1626221747.0 #s(elfeed-ref "ee0e011423b3d7da8092eab3fbcfb3124e76b496") html nil (emacs) "http://feeds.feedburner.com/XahsEmacsBlog" nil) ("feeds.feedburner.com" . "tag:xahlee,2021-07-11:204058") #s(elfeed-entry ("feeds.feedburner.com" . "tag:xahlee,2021-07-11:204058") "Emacs: Select Line, between Quotes, Extend Selection" "http://feedproxy.google.com/~r/XahsEmacsBlog/~3/mx0SuaPmYJY/modernization_mark-word.html" 1626010857.0 #s(elfeed-ref "ae3d404a98d249e6554811f3e518cf096af4cf15") html nil (emacs) "http://feeds.feedburner.com/XahsEmacsBlog" nil) ("feeds.feedburner.com" . "tag:xahlee,2021-07-08:220436") #s(elfeed-entry ("feeds.feedburner.com" . "tag:xahlee,2021-07-08:220436") "Emacs: xah-lookup.el, Lookup the Web" "http://feedproxy.google.com/~r/XahsEmacsBlog/~3/mEDbzyIPfco/xah-lookup.html" 1625756675.0 #s(elfeed-ref "d3f10f18caaa31e33558b3a52cd058461357474e") html nil (emacs) "http://feeds.feedburner.com/XahsEmacsBlog" nil) ("feeds.feedburner.com" . "tag:xahlee,2021-07-05:191452") #s(elfeed-entry ("feeds.feedburner.com" . "tag:xahlee,2021-07-05:191452") "Xah Emacs Packages" "http://feedproxy.google.com/~r/XahsEmacsBlog/~3/8oIchJEBI1w/blog.html" 1625487291.0 #s(elfeed-ref "e67942b4ed1a9629ff538aa318457f1a130906e3") html nil (emacs) "http://feeds.feedburner.com/XahsEmacsBlog" nil) ("feeds.feedburner.com" . "tag:xahlee,2021-07-05:165820") #s(elfeed-entry ("feeds.feedburner.com" . "tag:xahlee,2021-07-05:165820") "Elisp Misc Technical Essays" "http://feedproxy.google.com/~r/XahsEmacsBlog/~3/YIggJUfvIss/elisp_misc_index.html" 1625479099.0 #s(elfeed-ref "4de1c0ce9ee39fa09d0f65570b27ea2dce76403a") html nil (emacs) "http://feeds.feedburner.com/XahsEmacsBlog" nil) ("feeds.feedburner.com" . "tag:xahlee,2021-07-04:210855") #s(elfeed-entry ("feeds.feedburner.com" . "tag:xahlee,2021-07-04:210855") "emacs lisp coding style issue: let forms" "http://feedproxy.google.com/~r/XahsEmacsBlog/~3/nybFDpi26V8/emacs_lisp_let_forms.html" 1625479073.0 #s(elfeed-ref "61749791ea0888fbf50ef9892e61dd3fa81ebf0b") html nil (emacs) "http://feeds.feedburner.com/XahsEmacsBlog" nil) ("feeds.feedburner.com" . "tag:xahlee,2021-07-04:210757") #s(elfeed-entry ("feeds.feedburner.com" . "tag:xahlee,2021-07-04:210757") "Emacs: Move Image File" "http://feedproxy.google.com/~r/XahsEmacsBlog/~3/zFmsXuQk2VY/move_image_file.html" 1625407676.0 #s(elfeed-ref "f607cac54a74340c1ccf058d2b382a4012782711") html nil (emacs) "http://feeds.feedburner.com/XahsEmacsBlog" nil) ("feeds.feedburner.com" . "tag:xahlee,2021-07-04:205813") #s(elfeed-entry ("feeds.feedburner.com" . "tag:xahlee,2021-07-04:205813") "Elisp: Add Period to Line Ends" "http://feedproxy.google.com/~r/XahsEmacsBlog/~3/lyFVQK06vNk/emacs_period_to_line_end.html" 1625407092.0 #s(elfeed-ref "69405545dfd1a3e486b36f04d2c863b9bb0fe774") html nil (emacs) "http://feeds.feedburner.com/XahsEmacsBlog" nil) ("feeds.feedburner.com" . "tag:xahlee,2021-07-03:180941") #s(elfeed-entry ("feeds.feedburner.com" . "tag:xahlee,2021-07-03:180941") "Emacs: Show kill-ring" "http://feedproxy.google.com/~r/XahsEmacsBlog/~3/MCzZv5MrgCQ/emacs_show_kill_ring.html" 1625310580.0 #s(elfeed-ref "2f2192a1dcb6193853b2851d11c253703610f114") html nil (emacs) "http://feeds.feedburner.com/XahsEmacsBlog" nil) ("feeds.feedburner.com" . "tag:xahlee,2021-07-01:195600") #s(elfeed-entry ("feeds.feedburner.com" . "tag:xahlee,2021-07-01:195600") "Elisp: Function Naming, String Equal" "http://feedproxy.google.com/~r/XahsEmacsBlog/~3/O5XERnJTDwE/elisp_string_equal_naming.html" 1625144159.0 #s(elfeed-ref "3b7c4abcc10f70f8b252f136965e739986729950") html nil (emacs) "http://feeds.feedburner.com/XahsEmacsBlog" nil) ("feeds.feedburner.com" . "tag:xahlee,2021-07-01:195541") #s(elfeed-entry ("feeds.feedburner.com" . "tag:xahlee,2021-07-01:195541") "Emacs: Xah Fly Keys update, indent-rigidly etc" "http://feedproxy.google.com/~r/XahsEmacsBlog/~3/AvF7gotxjks/ergoemacs_vi_mode.html" 1625144140.0 #s(elfeed-ref "5e17411367d95d04b33cfdd470ab490d1e564208") html nil (emacs) "http://feeds.feedburner.com/XahsEmacsBlog" nil) ("feeds.feedburner.com" . "tag:xahlee,2021-07-01:195530") #s(elfeed-entry ("feeds.feedburner.com" . "tag:xahlee,2021-07-01:195530") "Xah Fly Keys Major Mode Key Problem" "http://feedproxy.google.com/~r/XahsEmacsBlog/~3/C_TWk6MB0l0/xah_fly_keys_major_mode_key_problem.html" 1625144129.0 #s(elfeed-ref "ce4bc16264cd249d42aff71172e7c920e5dfd0cd") html nil (emacs) "http://feeds.feedburner.com/XahsEmacsBlog" nil) ("feeds.feedburner.com" . "tag:xahlee,2021-07-01:195102") #s(elfeed-entry ("feeds.feedburner.com" . "tag:xahlee,2021-07-01:195102") "Emacs: Init File Tutorial" "http://feedproxy.google.com/~r/XahsEmacsBlog/~3/8oIchJEBI1w/blog.html" 1625143861.0 #s(elfeed-ref "57a77162375c6cefa4856f7c16ff99fc5536242c") html nil (emacs) "http://feeds.feedburner.com/XahsEmacsBlog" nil) ("feeds.feedburner.com" . "tag:xahlee,2021-06-29:001228") #s(elfeed-entry ("feeds.feedburner.com" . "tag:xahlee,2021-06-29:001228") "lots update" "http://feedproxy.google.com/~r/XahsEmacsBlog/~3/8oIchJEBI1w/blog.html" 1624900347.0 #s(elfeed-ref "f2c3f83b3bc0515d5097b89d2a24b0be5659d71b") html nil (emacs) "http://feeds.feedburner.com/XahsEmacsBlog" nil) ("feeds.feedburner.com" . "tag:xahlee,2021-06-28:222109") #s(elfeed-entry ("feeds.feedburner.com" . "tag:xahlee,2021-06-28:222109") "Emacs Keybinding Syntax Examples" "http://feedproxy.google.com/~r/XahsEmacsBlog/~3/3Jj1ZF-fLc0/keyboard_shortcuts_examples.html" 1624893668.0 #s(elfeed-ref "1fe25fa59c06dab99a37e5b80fd9da4c463304a6") html nil (emacs) "http://feeds.feedburner.com/XahsEmacsBlog" nil) ("feeds.feedburner.com" . "tag:xahlee,2021-06-28:033140") #s(elfeed-entry ("feeds.feedburner.com" . "tag:xahlee,2021-06-28:033140") "Emacs Keybinding List" "http://feedproxy.google.com/~r/XahsEmacsBlog/~3/3nxEXqWSb5A/emacs_keybinding_list.html" 1624825899.0 #s(elfeed-ref "36b4cf24bc43b50fd626ebf5ab526b975aae5a80") html nil (emacs) "http://feeds.feedburner.com/XahsEmacsBlog" nil) ("feeds.feedburner.com" . "tag:xahlee,2021-06-27:223426") #s(elfeed-entry ("feeds.feedburner.com" . "tag:xahlee,2021-06-27:223426") "Emacs Key Notation: Difference between <return> and RET" "http://feedproxy.google.com/~r/XahsEmacsBlog/~3/2pA7NcmK0vI/emacs_key_notation_return_vs_RET.html" 1624808065.0 #s(elfeed-ref "a84598451558962acc1fd0f1128bfe33e7836d5b") html nil (emacs) "http://feeds.feedburner.com/XahsEmacsBlog" nil) ("feeds.feedburner.com" . "tag:xahlee,2021-06-27:221112") #s(elfeed-entry ("feeds.feedburner.com" . "tag:xahlee,2021-06-27:221112") "emacs keybinding saga. xah fly keys. deep in keys." "http://feedproxy.google.com/~r/XahsEmacsBlog/~3/8oIchJEBI1w/blog.html" 1624806671.0 #s(elfeed-ref "55a3ae5b47d1ba1fc5aaf1dd1bcf4d695b9115c4") html nil (emacs) "http://feeds.feedburner.com/XahsEmacsBlog" nil) ("feeds.feedburner.com" . "tag:xahlee,2021-06-26:193034") #s(elfeed-entry ("feeds.feedburner.com" . "tag:xahlee,2021-06-26:193034") "Elisp: Create a Hook" "http://feedproxy.google.com/~r/XahsEmacsBlog/~3/z474mQqVu7k/emacs_create_hook.html" 1624710633.0 #s(elfeed-ref "573ccc5bbebd1930208a084068890e0fa0885d40") html nil (emacs) "http://feeds.feedburner.com/XahsEmacsBlog" nil) ("feeds.feedburner.com" . "tag:xahlee,2021-06-26:185101") #s(elfeed-entry ("feeds.feedburner.com" . "tag:xahlee,2021-06-26:185101") "Emacs: Regex Tutorial" "http://feedproxy.google.com/~r/XahsEmacsBlog/~3/8oIchJEBI1w/blog.html" 1624708260.0 #s(elfeed-ref "9e200dfa5ef49b8a0bad3b0be987d86490f30868") html nil (emacs) "http://feeds.feedburner.com/XahsEmacsBlog" nil) ("feeds.feedburner.com" . "tag:xahlee,2021-06-26:185056") #s(elfeed-entry ("feeds.feedburner.com" . "tag:xahlee,2021-06-26:185056") "XahTV 2021-06-25 Emacs vs Vscode, on Documentation, Java, WolframLang, PowerShell, Golang, Python" "http://feedproxy.google.com/~r/XahsEmacsBlog/~3/A_C95qtHlXg/xah_talk_show_2021-06-25.html" 1624708255.0 #s(elfeed-ref "adde2b1f345c311c2c813bf472696f14a4f31b43") html nil (emacs) "http://feeds.feedburner.com/XahsEmacsBlog" nil) ("feeds.feedburner.com" . "tag:xahlee,2021-06-25:192017") #s(elfeed-entry ("feeds.feedburner.com" . "tag:xahlee,2021-06-25:192017") "Doom Emacs" "http://feedproxy.google.com/~r/XahsEmacsBlog/~3/bJCSRvF11hs/doom_emacs.html" 1624623616.0 #s(elfeed-ref "0c3382abe43f9bb8a3588c5bb7292ae81ae8cd35") html nil (emacs) "http://feeds.feedburner.com/XahsEmacsBlog" nil) ("feeds.feedburner.com" . "tag:xahlee,2021-06-25:072849") #s(elfeed-entry ("feeds.feedburner.com" . "tag:xahlee,2021-06-25:072849") "Emacs vs vsCode Memory" "http://feedproxy.google.com/~r/XahsEmacsBlog/~3/AhKmSuRLU1E/emacs_vs_vscode_memory.html" 1624580928.0 #s(elfeed-ref "b46f94ab9b3df43271fb095b46b60b4112b842d9") html nil (emacs) "http://feeds.feedburner.com/XahsEmacsBlog" nil) ("feeds.feedburner.com" . "tag:xahlee,2021-06-24:213911") #s(elfeed-entry ("feeds.feedburner.com" . "tag:xahlee,2021-06-24:213911") "Emacs: Xah Fly Keys" "http://feedproxy.google.com/~r/XahsEmacsBlog/~3/AvF7gotxjks/ergoemacs_vi_mode.html" 1624545550.0 #s(elfeed-ref "532d02bc1c3fb8212094427d6a2d7d0f62dfbd04") html nil (emacs) "http://feeds.feedburner.com/XahsEmacsBlog" nil) ("feeds.feedburner.com" . "tag:xahlee,2021-06-24:213859") #s(elfeed-entry ("feeds.feedburner.com" . "tag:xahlee,2021-06-24:213859") "xah fly keys leader keymaping" "http://feedproxy.google.com/~r/XahsEmacsBlog/~3/8oIchJEBI1w/blog.html" 1624545538.0 #s(elfeed-ref "fa9103bd3de2b3788d8feb14909997250d45cb5e") html nil (emacs) "http://feeds.feedburner.com/XahsEmacsBlog" nil) ("feeds.feedburner.com" . "tag:xahlee,2021-06-24:053150") #s(elfeed-entry ("feeds.feedburner.com" . "tag:xahlee,2021-06-24:053150") "Emacs: Xah Fly Keys" "http://feedproxy.google.com/~r/XahsEmacsBlog/~3/AvF7gotxjks/ergoemacs_vi_mode.html" 1624487509.0 #s(elfeed-ref "de83e523d5cf872d411578746b7eedc872834651") html nil (emacs) "http://feeds.feedburner.com/XahsEmacsBlog" nil) ("feeds.feedburner.com" . "tag:xahlee,2021-06-22:220231") #s(elfeed-entry ("feeds.feedburner.com" . "tag:xahlee,2021-06-22:220231") "XahTV 2021-06-22 emacs lisp live coding, extend xah-html-select-current-element" "http://feedproxy.google.com/~r/XahsEmacsBlog/~3/8oIchJEBI1w/blog.html" 1624374150.0 #s(elfeed-ref "d000771e5740781b6b04d20142f590a7836fb852") html nil (emacs) "http://feeds.feedburner.com/XahsEmacsBlog" nil) ("feeds.feedburner.com" . "tag:xahlee,2021-06-22:192935") #s(elfeed-entry ("feeds.feedburner.com" . "tag:xahlee,2021-06-22:192935") "Elisp: Region, Active Region" "http://feedproxy.google.com/~r/XahsEmacsBlog/~3/VNuCpi8i8Hg/emacs_region.html" 1624364974.0 #s(elfeed-ref "0e45edbbb708c1b787c3b402e21c5fab58e5018e") html nil (emacs) "http://feeds.feedburner.com/XahsEmacsBlog" nil) ("feeds.feedburner.com" . "tag:xahlee,2021-06-22:180908") #s(elfeed-entry ("feeds.feedburner.com" . "tag:xahlee,2021-06-22:180908") "updates 2021-06-22" "http://feedproxy.google.com/~r/XahsEmacsBlog/~3/VNuCpi8i8Hg/emacs_region.html" 1624360147.0 #s(elfeed-ref "0e45edbbb708c1b787c3b402e21c5fab58e5018e") html nil (emacs) "http://feeds.feedburner.com/XahsEmacsBlog" nil) ("feeds.feedburner.com" . "tag:xahlee,2021-06-22:035155") #s(elfeed-entry ("feeds.feedburner.com" . "tag:xahlee,2021-06-22:035155") "XahTV 2021-06-21 emacs lisp coding. HTML Lines/Blocks to List" "http://feedproxy.google.com/~r/XahsEmacsBlog/~3/ML_8MXM8WCU/xah_talk_show_2021-06-21.html" 1624308714.0 #s(elfeed-ref "f3c9a2f70b0c2b3767b7cabf5d3526deb57352ea") html nil (emacs) "http://feeds.feedburner.com/XahsEmacsBlog" nil) ("feeds.feedburner.com" . "tag:xahlee,2021-06-22:033741") #s(elfeed-entry ("feeds.feedburner.com" . "tag:xahlee,2021-06-22:033741") "Emacs: HTML, Lines to List" "http://feedproxy.google.com/~r/XahsEmacsBlog/~3/3GbXNqIRd3M/elisp_lines_to_list.html" 1624307860.0 #s(elfeed-ref "0d20fd84de636257acb375b713bb089f38ab5619") html nil (emacs) "http://feeds.feedburner.com/XahsEmacsBlog" nil) ("feeds.feedburner.com" . "tag:xahlee,2021-06-20:221608") #s(elfeed-entry ("feeds.feedburner.com" . "tag:xahlee,2021-06-20:221608") "Emacs: Select Current HTML Element" "http://feedproxy.google.com/~r/XahsEmacsBlog/~3/Zy1jkPbw_yE/emacs_html_select_current_element.html" 1624202167.0 #s(elfeed-ref "bbe0676b9a329bdaf956f3e8f461e5e11481a291") html nil (emacs) "http://feeds.feedburner.com/XahsEmacsBlog" nil) ("feeds.feedburner.com" . "tag:xahlee,2021-06-18:192757") #s(elfeed-entry ("feeds.feedburner.com" . "tag:xahlee,2021-06-18:192757") "XahTV 2021-06-17 Emacs Workflow HTML Rename Source File Path, User Interface Peepshow Windows" "http://feedproxy.google.com/~r/XahsEmacsBlog/~3/IrK8yKgnHXA/xah_talk_show_2021-06-17.html" 1624019276.0 #s(elfeed-ref "3db06072992f997770e6ada4a9e05c629653ead8") html nil (emacs) "http://feeds.feedburner.com/XahsEmacsBlog" nil) ("feeds.feedburner.com" . "tag:xahlee,2021-06-17:233542") #s(elfeed-entry ("feeds.feedburner.com" . "tag:xahlee,2021-06-17:233542") "Emacs: HTML, Delete Tags" "http://feedproxy.google.com/~r/XahsEmacsBlog/~3/kGstP3YWdss/emacs_html_delete_tags.html" 1623947741.0 #s(elfeed-ref "a4a2fb6083e48db93793d0c3d63aee828bca4221") html nil (emacs) "http://feeds.feedburner.com/XahsEmacsBlog" nil) ("feeds.feedburner.com" . "tag:xahlee,2021-06-17:055706") #s(elfeed-entry ("feeds.feedburner.com" . "tag:xahlee,2021-06-17:055706") "Zettelkasten method of note taking" "http://feedproxy.google.com/~r/XahsEmacsBlog/~3/8oIchJEBI1w/blog.html" 1623884225.0 #s(elfeed-ref "9bd1a47b8e355dfcc2cfbe70108eb5888a83e638") html nil (emacs) "http://feeds.feedburner.com/XahsEmacsBlog" nil) ("feeds.feedburner.com" . "tag:xahlee,2021-06-08:232614") #s(elfeed-entry ("feeds.feedburner.com" . "tag:xahlee,2021-06-08:232614") "Emacs: HTML, Delete Tags" "http://feedproxy.google.com/~r/XahsEmacsBlog/~3/kGstP3YWdss/emacs_html_delete_tags.html" 1623169573.0 #s(elfeed-ref "a4a2fb6083e48db93793d0c3d63aee828bca4221") html nil (emacs) "http://feeds.feedburner.com/XahsEmacsBlog" nil) ("feeds.feedburner.com" . "tag:xahlee,2021-06-08:204226") #s(elfeed-entry ("feeds.feedburner.com" . "tag:xahlee,2021-06-08:204226") "Emacs: xah-dired.el" "http://feedproxy.google.com/~r/XahsEmacsBlog/~3/xZAOZsWSf2E/emacs_dired_convert_images.html" 1623159745.0 #s(elfeed-ref "e1129cdb3a57af8bf293f3d240690e9d36dc90cf") html nil (emacs) "http://feeds.feedburner.com/XahsEmacsBlog" nil) ("feeds.feedburner.com" . "tag:xahlee,2021-06-06:005750") #s(elfeed-entry ("feeds.feedburner.com" . "tag:xahlee,2021-06-06:005750") "XahTV 2021-06-05 Emacs Workflow, PowerShell, Mouse Spin Wheel, Apple M1 Chip" "http://feedproxy.google.com/~r/XahsEmacsBlog/~3/4tr3ybAnXBk/xah_talk_show_2021-06-05.html" 1622915869.0 #s(elfeed-ref "13e66e18967fdd1e81f92165bca22ed8c1cd714d") html nil (emacs) "http://feeds.feedburner.com/XahsEmacsBlog" nil) ("feeds.feedburner.com" . "tag:xahlee,2021-06-05:221130") #s(elfeed-entry ("feeds.feedburner.com" . "tag:xahlee,2021-06-05:221130") "Elisp: Embed Youtube Vid" "http://feedproxy.google.com/~r/XahsEmacsBlog/~3/duL6fLnkTB4/elisp_embed_youtube_vid.html" 1622905889.0 #s(elfeed-ref "6b4b10cfcf696a67518c794d869395eefd9f0782") html nil (emacs) "http://feeds.feedburner.com/XahsEmacsBlog" nil) ("feeds.feedburner.com" . "tag:xahlee,2021-06-05:212326") #s(elfeed-entry ("feeds.feedburner.com" . "tag:xahlee,2021-06-05:212326") "Emacs: Move Image File" "http://feedproxy.google.com/~r/XahsEmacsBlog/~3/zFmsXuQk2VY/move_image_file.html" 1622903005.0 #s(elfeed-ref "19dd57fd953caad87e00229635cf4b086f359065") html nil (emacs) "http://feeds.feedburner.com/XahsEmacsBlog" nil) ("feeds.feedburner.com" . "tag:xahlee,2021-06-03:051047") #s(elfeed-entry ("feeds.feedburner.com" . "tag:xahlee,2021-06-03:051047") "Elisp: Problems of thing-at-point" "http://feedproxy.google.com/~r/XahsEmacsBlog/~3/5CJ20BVme4A/elisp_thing-at-point_problems.html" 1622671846.0 #s(elfeed-ref "4164d6e44583d3ffbe91186e80e583191aea7c20") html nil (emacs) "http://feeds.feedburner.com/XahsEmacsBlog" nil) ("feeds.feedburner.com" . "tag:xahlee,2021-06-01:041209") #s(elfeed-entry ("feeds.feedburner.com" . "tag:xahlee,2021-06-01:041209") "XahTV 2021-05-31 Emacs Workflow HTML Delete Tags, Alt Tab No Good, No emacs calc, Futurism" "http://feedproxy.google.com/~r/XahsEmacsBlog/~3/E4rx5ZmE9Ms/xah_talk_show_2021-05-31.html" 1622495528.0 #s(elfeed-ref "5fe348dd94c84de0cc4179857153135193530074") html nil (emacs) "http://feeds.feedburner.com/XahsEmacsBlog" nil) ("feeds.feedburner.com" . "tag:xahlee,2021-05-31:223126") #s(elfeed-entry ("feeds.feedburner.com" . "tag:xahlee,2021-05-31:223126") "Emacs: HTML, Delete Tags" "http://feedproxy.google.com/~r/XahsEmacsBlog/~3/kGstP3YWdss/emacs_html_delete_tags.html" 1622475085.0 #s(elfeed-ref "9b93081d2b5a257295722960100439cef86e42b6") html nil (emacs) "http://feeds.feedburner.com/XahsEmacsBlog" nil) ("feeds.feedburner.com" . "tag:xahlee,2021-05-30:024402") #s(elfeed-entry ("feeds.feedburner.com" . "tag:xahlee,2021-05-30:024402") "XahTV 2021-05-29 Curly Quotes, Unicode, Emacs, and the Crime of RMS" "http://feedproxy.google.com/~r/XahsEmacsBlog/~3/0DTQJ_Tkxuo/xah_talk_show_2021-05-29.html" 1622317441.0 #s(elfeed-ref "16f5c7cd136ab888499624f99dcfa14834a1b261") html nil (emacs) "http://feeds.feedburner.com/XahsEmacsBlog" nil) ("feeds.feedburner.com" . "tag:xahlee,2021-05-30:024324") #s(elfeed-entry ("feeds.feedburner.com" . "tag:xahlee,2021-05-30:024324") "ergoemacs distro, 10 years ago" "http://feedproxy.google.com/~r/XahsEmacsBlog/~3/eVUniNcXM1w/google_code_ergoemacs_20210525165408.png" 1622317403.0 #s(elfeed-ref "874fe80f75e6ff6cd27c11734edbff6ae4e85fcc") html nil (emacs) "http://feeds.feedburner.com/XahsEmacsBlog" nil) ("feeds.feedburner.com" . "tag:xahlee,2021-05-20:060208") #s(elfeed-entry ("feeds.feedburner.com" . "tag:xahlee,2021-05-20:060208") "Emacs: Xah Fly Keys new supported layouts." "http://feedproxy.google.com/~r/XahsEmacsBlog/~3/AvF7gotxjks/ergoemacs_vi_mode.html" 1621465327.0 #s(elfeed-ref "89a94685ef8c8d1f9d6f3dc4bec851a3b3c50ade") html nil (emacs) "http://feeds.feedburner.com/XahsEmacsBlog" nil) ("feeds.feedburner.com" . "tag:xahlee,2021-05-18:215208") #s(elfeed-entry ("feeds.feedburner.com" . "tag:xahlee,2021-05-18:215208") "Elisp: URL to HTML Link" "http://feedproxy.google.com/~r/XahsEmacsBlog/~3/8oIchJEBI1w/blog.html" 1621349527.0 #s(elfeed-ref "156a5bccaa496b8ad2ca42d9b6d4248fb4854384") html nil (emacs) "http://feeds.feedburner.com/XahsEmacsBlog" nil) ("feeds.feedburner.com" . "tag:xahlee,2021-05-17:214124") #s(elfeed-entry ("feeds.feedburner.com" . "tag:xahlee,2021-05-17:214124") "XahTV 2021-05-17 Emacs Lisp Live Coding. Convert MM:SS to Seconds and Reverse" "http://feedproxy.google.com/~r/XahsEmacsBlog/~3/NZmkgp5YKvo/xah_talk_show_2021-05-17.html" 1621262483.0 #s(elfeed-ref "10abde3a394af06815909205b0ccfe5e9370573e") html nil (emacs) "http://feeds.feedburner.com/XahsEmacsBlog" nil) ("feeds.feedburner.com" . "tag:xahlee,2021-05-17:175550") #s(elfeed-entry ("feeds.feedburner.com" . "tag:xahlee,2021-05-17:175550") "Emacs: Xah Fly Keys, leader key sequences" "http://feedproxy.google.com/~r/XahsEmacsBlog/~3/AvF7gotxjks/ergoemacs_vi_mode.html" 1621248949.0 #s(elfeed-ref "55b83f49bbafbe402973e75e684ea262c967aa62") html nil (emacs) "http://feeds.feedburner.com/XahsEmacsBlog" nil) ("feeds.feedburner.com" . "tag:xahlee,2021-05-17:175530") #s(elfeed-entry ("feeds.feedburner.com" . "tag:xahlee,2021-05-17:175530") "xah file taxes" "http://feedproxy.google.com/~r/XahsEmacsBlog/~3/mwNZcws4418/xah_file_taxes_2021-05-17.png" 1621248929.0 #s(elfeed-ref "fbdada3355241caf54d428341bb627f512d0335c") html nil (emacs) "http://feeds.feedburner.com/XahsEmacsBlog" nil) ("feeds.feedburner.com" . "tag:xahlee,2021-05-14:205102") #s(elfeed-entry ("feeds.feedburner.com" . "tag:xahlee,2021-05-14:205102") "Emacs: URL related tutorial in a box" "http://feedproxy.google.com/~r/XahsEmacsBlog/~3/aGt8N8tC3s0/wrap-url.html" 1621000261.0 #s(elfeed-ref "2292b989db93166ba4ccc150e4001536f333869f") html nil (emacs) "http://feeds.feedburner.com/XahsEmacsBlog" nil) ("feeds.feedburner.com" . "tag:xahlee,2021-05-14:201756") #s(elfeed-entry ("feeds.feedburner.com" . "tag:xahlee,2021-05-14:201756") "Percent Decode/Encode URL" "http://feedproxy.google.com/~r/XahsEmacsBlog/~3/8oIchJEBI1w/blog.html" 1620998275.0 #s(elfeed-ref "83723e93cac3291eea015bfab78577fc8d9a70e7") html nil (emacs) "http://feeds.feedburner.com/XahsEmacsBlog" nil) ("feeds.feedburner.com" . "tag:xahlee,2021-05-14:193632") #s(elfeed-entry ("feeds.feedburner.com" . "tag:xahlee,2021-05-14:193632") "Elisp: Add Period to Line Ends" "http://feedproxy.google.com/~r/XahsEmacsBlog/~3/lyFVQK06vNk/emacs_period_to_line_end.html" 1620995791.0 #s(elfeed-ref "511ffb83f6663f998387abaab074f80f7bbe2037") html nil (emacs) "http://feeds.feedburner.com/XahsEmacsBlog" nil) ("feeds.feedburner.com" . "tag:xahlee,2021-05-12:185305") #s(elfeed-entry ("feeds.feedburner.com" . "tag:xahlee,2021-05-12:185305") "How to Avoid Emacs Pinky" "http://feedproxy.google.com/~r/XahsEmacsBlog/~3/8oIchJEBI1w/blog.html" 1620820384.0 #s(elfeed-ref "efff3f766fda64a42d0cf903e1cdc64d9b8d559f") html nil (emacs) "http://feeds.feedburner.com/XahsEmacsBlog" nil) ("feeds.feedburner.com" . "tag:xahlee,2021-05-11:065017") #s(elfeed-entry ("feeds.feedburner.com" . "tag:xahlee,2021-05-11:065017") "Elisp: Parse Org Mode" "http://feedproxy.google.com/~r/XahsEmacsBlog/~3/OQKiZ7Y9uVU/elisp_parse_org_mode.html" 1620690616.0 #s(elfeed-ref "104b46656e5f82b0ea5e609b5042445ac1e18626") html nil (emacs) "http://feeds.feedburner.com/XahsEmacsBlog" nil) ("feeds.feedburner.com" . "tag:xahlee,2021-05-07:220001") #s(elfeed-entry ("feeds.feedburner.com" . "tag:xahlee,2021-05-07:220001") "Elisp: Get User Input" "http://feedproxy.google.com/~r/XahsEmacsBlog/~3/eLT9E8lSYkQ/elisp_idioms_prompting_input.html" 1620399600.0 #s(elfeed-ref "573917388977b2a00aa740429c41d14b06723177") html nil (emacs) "http://feeds.feedburner.com/XahsEmacsBlog" nil) ("feeds.feedburner.com" . "tag:xahlee,2021-05-07:212835") #s(elfeed-entry ("feeds.feedburner.com" . "tag:xahlee,2021-05-07:212835") "Emacs in Microsoft Windows FAQ" "http://feedproxy.google.com/~r/XahsEmacsBlog/~3/PgO6skXBXiA/emacs_mswin.html" 1620397714.0 #s(elfeed-ref "d31d961e9955ad41b52268349560b46c4c194c33") html nil (emacs) "http://feeds.feedburner.com/XahsEmacsBlog" nil) ("feeds.feedburner.com" . "tag:xahlee,2021-05-03:185701") #s(elfeed-entry ("feeds.feedburner.com" . "tag:xahlee,2021-05-03:185701") "updated code for html linking. Removed the target=\"_blank\"" "http://feedproxy.google.com/~r/XahsEmacsBlog/~3/8oIchJEBI1w/blog.html" 1620043020.0 #s(elfeed-ref "5fe3502443e8cc270f31b78a768e2832f09c9f0d") html nil (emacs) "http://feeds.feedburner.com/XahsEmacsBlog" nil) ("feeds.feedburner.com" . "tag:xahlee,2021-05-03:185646") #s(elfeed-entry ("feeds.feedburner.com" . "tag:xahlee,2021-05-03:185646") "updates on line wrap" "http://feedproxy.google.com/~r/XahsEmacsBlog/~3/8oIchJEBI1w/blog.html" 1620043005.0 #s(elfeed-ref "ee33cd20957dc67e63e2492b6074695d5c5c1b57") html nil (emacs) "http://feeds.feedburner.com/XahsEmacsBlog" nil) ("feeds.feedburner.com" . "tag:xahlee,2021-04-28:052450") #s(elfeed-entry ("feeds.feedburner.com" . "tag:xahlee,2021-04-28:052450") "Emacs: Font Setup" "http://feedproxy.google.com/~r/XahsEmacsBlog/~3/-qlL91VEv4E/emacs_list_and_set_font.html" 1619562289.0 #s(elfeed-ref "c209bc11d844c58bfedcc70c81f71253bb4250b7") html nil (emacs) "http://feeds.feedburner.com/XahsEmacsBlog" nil) ("feeds.feedburner.com" . "tag:xahlee,2021-04-25:211220") #s(elfeed-entry ("feeds.feedburner.com" . "tag:xahlee,2021-04-25:211220") "Xah Talk Show 2021-04-24 Lisp and Wolfram Language Syntax Isomorphism and Design" "http://feedproxy.google.com/~r/XahsEmacsBlog/~3/L-xD6K_77Cg/xah_talk_show_2021-04-24.html" 1619359939.0 #s(elfeed-ref "4f40efec032c993d9030ebec1266a72f164ef5cf") html nil (emacs) "http://feeds.feedburner.com/XahsEmacsBlog" nil) ("feeds.feedburner.com" . "tag:xahlee,2021-04-19:051734") #s(elfeed-entry ("feeds.feedburner.com" . "tag:xahlee,2021-04-19:051734") "XahTV 20210418 emacs lisp. Fuzzy matching. Explore ido and helm source code." "http://feedproxy.google.com/~r/XahsEmacsBlog/~3/bTbwESnxIzY/xah_talk_show_2021-04-18.html" 1618784253.0 #s(elfeed-ref "1d5d670585c0d364f860b9c2217fde2663c49e52") html nil (emacs) "http://feeds.feedburner.com/XahsEmacsBlog" nil) ("feeds.feedburner.com" . "tag:xahlee,2021-04-19:051712") #s(elfeed-entry ("feeds.feedburner.com" . "tag:xahlee,2021-04-19:051712") "emacs M-x invisible, by gribojedow 2021-04-16" "http://feedproxy.google.com/~r/XahsEmacsBlog/~3/r4wtVGcQenQ/emacs_M-x_invisible_gribojedow_2021-04-16.png" 1618784231.0 #s(elfeed-ref "82d2e7655012f11ea3dea63263100e37955df18f") html nil (emacs) "http://feeds.feedburner.com/XahsEmacsBlog" nil) ("feeds.feedburner.com" . "tag:xahlee,2021-04-15:025137") #s(elfeed-entry ("feeds.feedburner.com" . "tag:xahlee,2021-04-15:025137") "Xah Talk Show 2021-04-14 emacs lisp Live Coding + Tutorial. Add Period to Line Ends" "http://feedproxy.google.com/~r/XahsEmacsBlog/~3/isuicVrWQGE/xah_talk_show_2021-04-14.html" 1618429896.0 #s(elfeed-ref "957a3995639ca9d97f9a2bb37231662f8a580b61") html nil (emacs) "http://feeds.feedburner.com/XahsEmacsBlog" nil) ("feeds.feedburner.com" . "tag:xahlee,2021-04-14:192959") #s(elfeed-entry ("feeds.feedburner.com" . "tag:xahlee,2021-04-14:192959") "Emacs Period to Line End" "http://feedproxy.google.com/~r/XahsEmacsBlog/~3/lyFVQK06vNk/emacs_period_to_line_end.html" 1618403398.0 #s(elfeed-ref "27268f4f6b3f5061970483b265fb096528a9c10f") html nil (emacs) "http://feeds.feedburner.com/XahsEmacsBlog" nil) ("feeds.feedburner.com" . "tag:xahlee,2021-04-11:064846") #s(elfeed-entry ("feeds.feedburner.com" . "tag:xahlee,2021-04-11:064846") "formatting updates." "http://feedproxy.google.com/~r/XahsEmacsBlog/~3/8oIchJEBI1w/blog.html" 1618098525.0 #s(elfeed-ref "cbd661001b5238037c3f41454ab928cf5c539733") html nil (emacs) "http://feeds.feedburner.com/XahsEmacsBlog" nil) ("feeds.feedburner.com" . "tag:xahlee,2021-04-11:032432") #s(elfeed-entry ("feeds.feedburner.com" . "tag:xahlee,2021-04-11:032432") "Xah Talk Show 2021-04-09 beginner emacs lisp tutorial. xah-html-copy-change-relative-link" "http://feedproxy.google.com/~r/XahsEmacsBlog/~3/Tp_yNz26Awk/xah_talk_show_2021-04-09.html" 1618086271.0 #s(elfeed-ref "7dca7f2c76c6a376debb5d1e0417d3a8d3c16d16") html nil (emacs) "http://feeds.feedburner.com/XahsEmacsBlog" nil) ("feeds.feedburner.com" . "tag:xahlee,2021-04-11:030220") #s(elfeed-entry ("feeds.feedburner.com" . "tag:xahlee,2021-04-11:030220") "Elisp: Bracket CAPITALIZED WORDS" "http://feedproxy.google.com/~r/XahsEmacsBlog/~3/GjWNz_yEINo/elisp_bracket_caps.html" 1618084939.0 #s(elfeed-ref "77bc69c0078714ed7c584759c25ab4403dcb01e5") html nil (emacs) "http://feeds.feedburner.com/XahsEmacsBlog" nil) ("feeds.feedburner.com" . "tag:xahlee,2021-04-11:030205") #s(elfeed-entry ("feeds.feedburner.com" . "tag:xahlee,2021-04-11:030205") "Emacs: Undo/Redo Saga" "http://feedproxy.google.com/~r/XahsEmacsBlog/~3/R37ZSEo6DYY/emacs_best_redo_mode.html" 1618084924.0 #s(elfeed-ref "c8a821879b5fec96d68f4684290f992a69085e8d") html nil (emacs) "http://feeds.feedburner.com/XahsEmacsBlog" nil) ("feeds.feedburner.com" . "tag:xahlee,2021-04-03:232157") #s(elfeed-entry ("feeds.feedburner.com" . "tag:xahlee,2021-04-03:232157") "Emacs: Xah Math Input Mode" "http://feedproxy.google.com/~r/XahsEmacsBlog/~3/FPJyZyFEhVM/xmsi-math-symbols-input.html" 1617466916.0 #s(elfeed-ref "b57a3629dcc465d4c3f5209a59a2ec268ff707bc") html nil (emacs) "http://feeds.feedburner.com/XahsEmacsBlog" nil) ("feeds.feedburner.com" . "tag:xahlee,2021-04-03:231818") #s(elfeed-entry ("feeds.feedburner.com" . "tag:xahlee,2021-04-03:231818") "Emacs: Xah Fly Keys Customization. added how to customize M-x" "http://feedproxy.google.com/~r/XahsEmacsBlog/~3/eEOExmjlydo/xah-fly-keys_customization.html" 1617466697.0 #s(elfeed-ref "670e4731015288cc196b7b2e438299104797dc4d") html nil (emacs) "http://feeds.feedburner.com/XahsEmacsBlog" nil) ("feeds.feedburner.com" . "tag:xahlee,2021-04-03:231808") #s(elfeed-entry ("feeds.feedburner.com" . "tag:xahlee,2021-04-03:231808") "elisp code auto format" "http://feedproxy.google.com/~r/XahsEmacsBlog/~3/hKlVnRjBUDs/lisp_formatter.html" 1617471560.0 #s(elfeed-ref "dff4447d948f7752ddc126c4524717e44220e87c") html nil (emacs) "http://feeds.feedburner.com/XahsEmacsBlog" nil) ("feeds.feedburner.com" . "tag:xahlee,2021-04-02:171238") #s(elfeed-entry ("feeds.feedburner.com" . "tag:xahlee,2021-04-02:171238") "Emacs, Why Not Use Dash" "http://feedproxy.google.com/~r/XahsEmacsBlog/~3/u2iptBY4nvk/emacs_why_no_dash.html" 1617358357.0 #s(elfeed-ref "9779ea9a621b2e2e891b0428dbac7585915ed08d") html nil (emacs) "http://feeds.feedburner.com/XahsEmacsBlog" nil) ("feeds.feedburner.com" . "tag:xahlee,2021-04-02:171228") #s(elfeed-entry ("feeds.feedburner.com" . "tag:xahlee,2021-04-02:171228") "rms announce back in fsf 2021-03-26" "http://feedproxy.google.com/~r/XahsEmacsBlog/~3/L8GOt8eC-V4/rms_resign.html" 1617475933.0 #s(elfeed-ref "b51533e402ffecab87d0b091eedf1bd7ee40c0b2") html nil (emacs) "http://feeds.feedburner.com/XahsEmacsBlog" nil) ("pragmaticemacs.com" . "http://pragmaticemacs.com/?p=833") #s(elfeed-entry ("pragmaticemacs.com" . "http://pragmaticemacs.com/?p=833") "Write code comments in org-mode with poporg" "http://pragmaticemacs.com/emacs/write-code-comments-in-org-mode-with-poporg/" 1525205400.0 #s(elfeed-ref "9df28eb9d3e721ae3614ff3a90f793d321617e34") html nil (emacs unread) "http://pragmaticemacs.com/feed/" (:authors ((:name "Ben Maughan")) :categories ("emacs" "org"))) ("pragmaticemacs.com" . "http://pragmaticemacs.com/?p=815") #s(elfeed-entry ("pragmaticemacs.com" . "http://pragmaticemacs.com/?p=815") "Reorder TODO items in your org-mode agenda" "http://pragmaticemacs.com/emacs/reorder-todo-items-in-your-org-mode-agenda/" 1512078960.0 #s(elfeed-ref "fd6048b1f0da84f933fa25a3bd4cff07cc99b870") html nil (emacs unread) "http://pragmaticemacs.com/feed/" (:authors ((:name "Ben Maughan")) :categories ("emacs" "org"))) ("pragmaticemacs.com" . "http://pragmaticemacs.com/?p=809") #s(elfeed-entry ("pragmaticemacs.com" . "http://pragmaticemacs.com/?p=809") "Pop up a quick shell with shell-pop" "http://pragmaticemacs.com/emacs/pop-up-a-quick-shell-with-shell-pop/" 1511215560.0 #s(elfeed-ref "719fba784460708005c87008346c46e473777af2") html nil (emacs unread) "http://pragmaticemacs.com/feed/" (:authors ((:name "Ben Maughan")) :categories ("emacs"))) ("pragmaticemacs.com" . "http://pragmaticemacs.com/?p=800") #s(elfeed-entry ("pragmaticemacs.com" . "http://pragmaticemacs.com/?p=800") "Even more PDF-tools tweaks" "http://pragmaticemacs.com/emacs/even-more-pdf-tools-tweaks/" 1510695840.0 #s(elfeed-ref "60f7bffde2ba4e14e1682d82e50c461cb4206a71") html nil (emacs unread) "http://pragmaticemacs.com/feed/" (:authors ((:name "Ben Maughan")) :categories ("emacs"))) ("pragmaticemacs.com" . "http://pragmaticemacs.com/?p=795") #s(elfeed-entry ("pragmaticemacs.com" . "http://pragmaticemacs.com/?p=795") "More PDF-tools tweaks" "http://pragmaticemacs.com/emacs/more-pdf-tools-tweaks/" 1510176120.0 #s(elfeed-ref "c9052d34a4fa1faca996c4dc283bed3b9c9d7cb4") html nil (emacs unread) "http://pragmaticemacs.com/feed/" (:authors ((:name "Ben Maughan")) :categories ("emacs"))) ("pragmaticemacs.com" . "http://pragmaticemacs.com/?p=792") #s(elfeed-entry ("pragmaticemacs.com" . "http://pragmaticemacs.com/?p=792") "View and annotate PDFs in Emacs with PDF-tools" "http://pragmaticemacs.com/emacs/view-and-annotate-pdfs-in-emacs-with-pdf-tools/" 1509204120.0 #s(elfeed-ref "d27b1944c25251fa5de8580e9d56075cec8c9dfa") html nil (emacs unread) "http://pragmaticemacs.com/feed/" (:authors ((:name "Ben Maughan")) :categories ("emacs"))) ("pragmaticemacs.com" . "http://pragmaticemacs.com/?p=789") #s(elfeed-entry ("pragmaticemacs.com" . "http://pragmaticemacs.com/?p=789") "Using a visible bell in Emacs" "http://pragmaticemacs.com/emacs/using-a-visible-bell-in-emacs/" 1508110500.0 #s(elfeed-ref "2b039e94d9fc243b3fd2b0bb16cbd03f624591a9") html nil (emacs unread) "http://pragmaticemacs.com/feed/" (:authors ((:name "Ben Maughan")) :categories ("emacs"))) ("pragmaticemacs.com" . "http://pragmaticemacs.com/?p=787") #s(elfeed-entry ("pragmaticemacs.com" . "http://pragmaticemacs.com/?p=787") "Tree-style directory views in dired with dired-subtree" "http://pragmaticemacs.com/emacs/tree-style-directory-views-in-dired-with-dired-subtree/" 1507505340.0 #s(elfeed-ref "70037e08b0b51a5c1ca48b5f4b5c6eaf37687d00") html nil (emacs unread) "http://pragmaticemacs.com/feed/" (:authors ((:name "Ben Maughan")) :categories ("dired" "emacs"))) ("pragmaticemacs.com" . "http://pragmaticemacs.com/?p=781") #s(elfeed-entry ("pragmaticemacs.com" . "http://pragmaticemacs.com/?p=781") "Adaptive cursor width" "http://pragmaticemacs.com/emacs/adaptive-cursor-width/" 1506900960.0 #s(elfeed-ref "3557f9d43b9cd8620f88c6afdf14a787998b8e5e") html nil (emacs unread) "http://pragmaticemacs.com/feed/" (:authors ((:name "Ben Maughan")) :categories ("emacs"))) ("pragmaticemacs.com" . "http://pragmaticemacs.com/?p=776") #s(elfeed-entry ("pragmaticemacs.com" . "http://pragmaticemacs.com/?p=776") "Get that spacemacs look without spacemacs" "http://pragmaticemacs.com/emacs/get-that-spacemacs-look-without-spacemacs/" 1506296280.0 #s(elfeed-ref "fb3405967a8f0d48d3e1a4bdb990b08f5ba87993") html nil (emacs unread) "http://pragmaticemacs.com/feed/" (:authors ((:name "Ben Maughan")) :categories ("emacs"))) ("understandinguncertainty.org" . "58 at http://understandinguncertainty.org") #s(elfeed-entry ("understandinguncertainty.org" . "58 at http://understandinguncertainty.org") "Welcome to Understanding Uncertainty" "http://feedproxy.google.com/~r/UnderstandingUncertainty/~3/JATNAf-Prz8/58" 1371635591.0 #s(elfeed-ref "aa8c76879631bea492e3b5039b837318054d2c08") html nil (daily unread) "http://understandinguncertainty.org/rss.xml" (:authors ((:name "david")))) ("understandinguncertainty.org" . "8845 at http://understandinguncertainty.org") #s(elfeed-entry ("understandinguncertainty.org" . "8845 at http://understandinguncertainty.org") "Women listen and men look? How to best communicate risk to support decision making" "http://feedproxy.google.com/~r/UnderstandingUncertainty/~3/Kbl5_r72NMI/women-listen-and-men-look-how-best-communicate-risk-support-decision-making" 1470927249.0 #s(elfeed-ref "ca03558b05181bbb2f512eb8dd6002fa2124e498") html nil (daily unread) "http://understandinguncertainty.org/rss.xml" (:authors ((:name "verenarieser")))) ("understandinguncertainty.org" . "8844 at http://understandinguncertainty.org") #s(elfeed-entry ("understandinguncertainty.org" . "8844 at http://understandinguncertainty.org") "Exploring the language of chance in a sensitive context" "http://feedproxy.google.com/~r/UnderstandingUncertainty/~3/h0Zf-RBy_D4/exploring-language-chance-sensitive-context" 1470569743.0 #s(elfeed-ref "58333807caa77fb20d152519ccdb0a2cfc878376") html nil (daily unread) "http://understandinguncertainty.org/rss.xml" (:authors ((:name "david")))) ("understandinguncertainty.org" . "8583 at http://understandinguncertainty.org") #s(elfeed-entry ("understandinguncertainty.org" . "8583 at http://understandinguncertainty.org") "The risks of Big Data – or why I am not worried about brain tumours." "http://feedproxy.google.com/~r/UnderstandingUncertainty/~3/verFmcITF4E/risks-big-data-%E2%80%93-or-why-i-am-not-worried-about-brain-tumours" 1467122808.0 #s(elfeed-ref "1839860ff117f86475b40aaaf00c9c0b8a0836e8") html nil (daily unread) "http://understandinguncertainty.org/rss.xml" (:authors ((:name "david")))) ("understandinguncertainty.org" . "8566 at http://understandinguncertainty.org") #s(elfeed-entry ("understandinguncertainty.org" . "8566 at http://understandinguncertainty.org") "The risks of trying to be funny" "http://feedproxy.google.com/~r/UnderstandingUncertainty/~3/wYY2Yv9_Lt8/risks-trying-be-funny" 1465400710.0 #s(elfeed-ref "6a0ac01809ad7f2d9d9f51ca1964b48d6198a53f") html nil (daily unread) "http://understandinguncertainty.org/rss.xml" (:authors ((:name "david")))) ("understandinguncertainty.org" . "8550 at http://understandinguncertainty.org") #s(elfeed-entry ("understandinguncertainty.org" . "8550 at http://understandinguncertainty.org") "The importance of what you don’t see" "http://feedproxy.google.com/~r/UnderstandingUncertainty/~3/FewwfCGFgvU/importance-what-you-don%E2%80%99t-see" 1463916589.0 #s(elfeed-ref "54da500b3c604df1c26ce3fa8852888bfba8c52d") html nil (daily unread) "http://understandinguncertainty.org/rss.xml" (:authors ((:name "david")))) ("understandinguncertainty.org" . "8352 at http://understandinguncertainty.org") #s(elfeed-entry ("understandinguncertainty.org" . "8352 at http://understandinguncertainty.org") "Medicine, poison, poison, poison, ……" "http://feedproxy.google.com/~r/UnderstandingUncertainty/~3/KSGCTiwUr7I/medicine-poison-poison-poison-%E2%80%A6%E2%80%A6" 1452340552.0 #s(elfeed-ref "b2ca8e589bfa6ea0faa90e8ea63c401d2465e8f2") html nil (daily unread) "http://understandinguncertainty.org/rss.xml" (:authors ((:name "david")))) ("understandinguncertainty.org" . "8306 at http://understandinguncertainty.org") #s(elfeed-entry ("understandinguncertainty.org" . "8306 at http://understandinguncertainty.org") "Jeremy Hunt, the Guardian, and the importance of getting the stats right" "http://feedproxy.google.com/~r/UnderstandingUncertainty/~3/BDOhwpu5MwA/jeremy-hunt-guardian-and-importance-getting-stats-right" 1448078940.0 #s(elfeed-ref "d40452a86becc1ea7438d636145c528bbb66840b") html nil (daily unread) "http://understandinguncertainty.org/rss.xml" (:authors ((:name "david")))) ("understandinguncertainty.org" . "8295 at http://understandinguncertainty.org") #s(elfeed-entry ("understandinguncertainty.org" . "8295 at http://understandinguncertainty.org") "HRT, breast cancer, and the framing of risks" "http://feedproxy.google.com/~r/UnderstandingUncertainty/~3/yodDALfA3tk/hrt-breast-cancer-and-framing-risks" 1447500151.0 #s(elfeed-ref "55e256f586b2032e0c10613514f363997e8b1a3c") html nil (daily unread) "http://understandinguncertainty.org/rss.xml" (:authors ((:name "david")))) ("understandinguncertainty.org" . "8264 at http://understandinguncertainty.org") #s(elfeed-entry ("understandinguncertainty.org" . "8264 at http://understandinguncertainty.org") "Is it fair that a single bad outcome should label a surgeon as an outlier?" "http://feedproxy.google.com/~r/UnderstandingUncertainty/~3/_Gza2k0wK7U/it-fair-single-bad-outcome-should-label-surgeon-outlier" 1445084212.0 #s(elfeed-ref "e8353ee13c42a0710bb50d0c0afff3f8ea3bbb90") html nil (daily unread) "http://understandinguncertainty.org/rss.xml" (:authors ((:name "david")))) ("telescoper.wordpress.com" . "http://telescoper.wordpress.com/2021/08/06/autumn-arrives/") #s(elfeed-entry ("telescoper.wordpress.com" . "http://telescoper.wordpress.com/2021/08/06/autumn-arrives/") "Autumn Arrives" "https://telescoper.wordpress.com/2021/08/06/autumn-arrives/" 1628247092.0 #s(elfeed-ref "f836ed5f0c4c6abe1c3e41b0c60d6831fdf0f56b") html nil (daily) "http://telescoper.wordpress.com/feed/" (:authors ((:name "telescoper")) :categories ("Biographical" "Maynooth" "The Universe and Stuff" "August" "Autumn"))) ("telescoper.wordpress.com" . "http://telescoper.wordpress.com/2021/08/05/pointless-postscript/") #s(elfeed-entry ("telescoper.wordpress.com" . "http://telescoper.wordpress.com/2021/08/05/pointless-postscript/") "Pointless Postscript" "https://telescoper.wordpress.com/2021/08/05/pointless-postscript/" 1628182080.0 #s(elfeed-ref "e46a034b2c7abe0d72f2695f5d3ffd05b10cfc8e") html nil (daily) "http://telescoper.wordpress.com/feed/" (:authors ((:name "telescoper")) :categories ("Biographical" "Education" "L. A. Wilding" "latin" "Latin Course for Schools"))) ("telescoper.wordpress.com" . "http://telescoper.wordpress.com/?p=49982") #s(elfeed-entry ("telescoper.wordpress.com" . "http://telescoper.wordpress.com/?p=49982") "Thoughts of Return" "https://telescoper.wordpress.com/2021/08/04/thoughts-of-return/" 1628091969.0 #s(elfeed-ref "60fa5e50bd7895d727b1b3306b39f14cecd38f34") html nil (daily) "http://telescoper.wordpress.com/feed/" (:authors ((:name "telescoper")) :categories ("Biographical" "Covid-19" "Education" "Maynooth"))) ("telescoper.wordpress.com" . "http://telescoper.wordpress.com/?p=49976") #s(elfeed-entry ("telescoper.wordpress.com" . "http://telescoper.wordpress.com/?p=49976") "Repeat Message.." "https://telescoper.wordpress.com/2021/08/03/repeat-message-2/" 1628016383.0 #s(elfeed-ref "46c81c216df11163a1766d31aa8a74d6e1d2db68") html nil (daily) "http://telescoper.wordpress.com/feed/" (:authors ((:name "telescoper")) :categories ("Education" "Maynooth" "Examinations" "Repeat examinations" "Resit examinations" "University Education"))) ("telescoper.wordpress.com" . "http://telescoper.wordpress.com/?p=49958") #s(elfeed-entry ("telescoper.wordpress.com" . "http://telescoper.wordpress.com/?p=49958") "Eye Level" "https://telescoper.wordpress.com/2021/08/02/eye-level/" 1627906615.0 #s(elfeed-ref "0b10a562d1d9cc4648a18b19421ab9978fe37675") html nil (daily) "http://telescoper.wordpress.com/feed/" (:authors ((:name "telescoper")) :categories ("Music" "Television" "Eye Level" "Simon Park Orchestra" "Van der Wallk"))) ("telescoper.wordpress.com" . "http://telescoper.wordpress.com/?p=49947") #s(elfeed-entry ("telescoper.wordpress.com" . "http://telescoper.wordpress.com/?p=49947") "On Lúnasa" "https://telescoper.wordpress.com/2021/08/01/on-lunasa/" 1627815235.0 #s(elfeed-ref "aaf436fed440501f34dc44fbd0eaa9036eb914f1") html nil (daily) "http://telescoper.wordpress.com/feed/" (:authors ((:name "telescoper")) :categories ("Biographical" "Education" "History" "Maynooth"))) ("telescoper.wordpress.com" . "http://telescoper.wordpress.com/?p=49937") #s(elfeed-entry ("telescoper.wordpress.com" . "http://telescoper.wordpress.com/?p=49937") "When was the Epoch of Galaxy Formation?" "https://telescoper.wordpress.com/2021/07/31/when-was-the-epoch-of-galaxy-formation/" 1627749840.0 #s(elfeed-ref "65e973685b72fd86702ccf6bc349fbe304f640b4") html nil (daily) "http://telescoper.wordpress.com/feed/" (:authors ((:name "telescoper")) :categories ("Biographical" "The Universe and Stuff" "Cosmology" "Durham University" "July 1988" "The Epoch of Galaxy Formation"))) ("telescoper.wordpress.com" . "http://telescoper.wordpress.com/?p=49930") #s(elfeed-entry ("telescoper.wordpress.com" . "http://telescoper.wordpress.com/?p=49930") "The Joy of Latin" "https://telescoper.wordpress.com/2021/07/31/the-joy-of-latin/" 1627745320.0 #s(elfeed-ref "ff84069bd60ae3ab18117b18a6e1be049436f7b6") html nil (daily) "http://telescoper.wordpress.com/feed/" (:authors ((:name "telescoper")) :categories ("Biographical" "Education" "Politics" "French" "German" "latin" "O-level Latin 1979"))) ("telescoper.wordpress.com" . "http://telescoper.wordpress.com/?p=49912") #s(elfeed-entry ("telescoper.wordpress.com" . "http://telescoper.wordpress.com/?p=49912") "A Medicine for the Pestilence" "https://telescoper.wordpress.com/2021/07/30/a-medicine-for-the-pestilence/" 1627647749.0 #s(elfeed-ref "9c55e17770afd360da33e5d9cc20f451282b5e51") html nil (daily) "http://telescoper.wordpress.com/feed/" (:authors ((:name "telescoper")) :categories ("History" "black death" "eggs" "Medicine" "rue" "tansy"))) ("telescoper.wordpress.com" . "http://telescoper.wordpress.com/?p=49894") #s(elfeed-entry ("telescoper.wordpress.com" . "http://telescoper.wordpress.com/?p=49894") "Quinquennial Reflection" "https://telescoper.wordpress.com/2021/07/29/quinquennial-reflection/" 1627561644.0 #s(elfeed-ref "90f403d15f41c06b9e2a9efb924ed04f87c83b22") html nil (daily) "http://telescoper.wordpress.com/feed/" (:authors ((:name "telescoper")) :categories ("Biographical" "Cardiff" "Covid-19" "Maynooth"))) ("www.reddit.com" . "t3_oxo1xh") #s(elfeed-entry ("www.reddit.com" . "t3_oxo1xh") "Weekly Tips, Tricks, &c. Thread" "https://www.reddit.com/r/emacs/comments/oxo1xh/weekly_tips_tricks_c_thread/" 1628064917.0 #s(elfeed-ref "3804cd2d24a32ce4cec10c130b0cbda0131f0ce8") html nil (emacs) "http://www.reddit.com/r/emacs/.rss" (:authors ((:name "/u/AutoModerator" :uri "https://www.reddit.com/user/AutoModerator")) :categories ("emacs"))) ("www.reddit.com" . "t3_oyl40m") #s(elfeed-entry ("www.reddit.com" . "t3_oyl40m") "EmacsConf 2021 Call for Proposals" "https://www.reddit.com/r/emacs/comments/oyl40m/emacsconf_2021_call_for_proposals/" 1628178349.0 #s(elfeed-ref "5fa6ebc7e77cc5962c70ed10d34bca0091d5c746") html nil (emacs) "http://www.reddit.com/r/emacs/.rss" (:authors ((:name "/u/bandali" :uri "https://www.reddit.com/user/bandali")) :categories ("emacs"))) ("www.reddit.com" . "t3_ozqhbi") #s(elfeed-entry ("www.reddit.com" . "t3_ozqhbi") "How do YOU write academic papers in org-mode?" "https://www.reddit.com/r/emacs/comments/ozqhbi/how_do_you_write_academic_papers_in_orgmode/" 1628329963.0 #s(elfeed-ref "faac2c6c6c6391b89d62d7b73a2f4e558bf1d90b") html nil (emacs) "http://www.reddit.com/r/emacs/.rss" (:authors ((:name "/u/iwaka" :uri "https://www.reddit.com/user/iwaka")) :categories ("emacs"))) ("www.reddit.com" . "t3_ozfcj2") #s(elfeed-entry ("www.reddit.com" . "t3_ozfcj2") "Magit has been added to NonGNU ELPA" "https://www.reddit.com/r/emacs/comments/ozfcj2/magit_has_been_added_to_nongnu_elpa/" 1628283266.0 #s(elfeed-ref "549de4636d3d8828b6967790a451acf119444fe1") html nil (emacs) "http://www.reddit.com/r/emacs/.rss" (:authors ((:name "/u/_pkal" :uri "https://www.reddit.com/user/_pkal")) :categories ("emacs"))) ("www.reddit.com" . "t3_ozdtmu") #s(elfeed-entry ("www.reddit.com" . "t3_ozdtmu") "The Emacs Lock-In Effect or the Emacs Sunk Cost Fallacy" "https://www.reddit.com/r/emacs/comments/ozdtmu/the_emacs_lockin_effect_or_the_emacs_sunk_cost/" 1628278470.0 #s(elfeed-ref "bbb172e45fe7084f6050ec4ebca029adc4c3a289") html nil (emacs) "http://www.reddit.com/r/emacs/.rss" (:authors ((:name "/u/speckz" :uri "https://www.reddit.com/user/speckz")) :categories ("emacs"))) ("www.reddit.com" . "t3_ozqwkv") #s(elfeed-entry ("www.reddit.com" . "t3_ozqwkv") "Asynchronous magit-section" "https://www.reddit.com/r/emacs/comments/ozqwkv/asynchronous_magitsection/" 1628332233.0 #s(elfeed-ref "6f423643472a2097e15784e1ab464ed50ae82d00") html nil (emacs) "http://www.reddit.com/r/emacs/.rss" (:authors ((:name "/u/canatella" :uri "https://www.reddit.com/user/canatella")) :categories ("emacs"))) ("www.reddit.com" . "t3_oz60xr") #s(elfeed-entry ("www.reddit.com" . "t3_oz60xr") "Interacting with the Menu Bar" "https://www.reddit.com/r/emacs/comments/oz60xr/interacting_with_the_menu_bar/" 1628254361.0 #s(elfeed-ref "16c48d67ca2f3947e6900806ae91d9869755ca2f") html nil (emacs) "http://www.reddit.com/r/emacs/.rss" (:authors ((:name "/u/bozhidarb" :uri "https://www.reddit.com/user/bozhidarb")) :categories ("emacs"))) ("www.reddit.com" . "t3_ozfup5") #s(elfeed-entry ("www.reddit.com" . "t3_ozfup5") "Moldable Emacs: evaluate arithmetic at point" "https://www.reddit.com/r/emacs/comments/ozfup5/moldable_emacs_evaluate_arithmetic_at_point/" 1628284828.0 #s(elfeed-ref "9382bfcb65385cb46822c9eb8b9eada8aafd0e47") html nil (emacs) "http://www.reddit.com/r/emacs/.rss" (:authors ((:name "/u/AndreaSomePostfix" :uri "https://www.reddit.com/user/AndreaSomePostfix")) :categories ("emacs"))) ("www.reddit.com" . "t3_oyzfz9") #s(elfeed-entry ("www.reddit.com" . "t3_oyzfz9") "KMonad and the power of infinite leader keys" "https://www.reddit.com/r/emacs/comments/oyzfz9/kmonad_and_the_power_of_infinite_leader_keys/" 1628223860.0 #s(elfeed-ref "9e0cea6fac803b41374f1a1a3c38f4dc3c27a3fa") html nil (emacs) "http://www.reddit.com/r/emacs/.rss" (:authors ((:name "/u/ram535" :uri "https://www.reddit.com/user/ram535")) :categories ("emacs"))) ("www.reddit.com" . "t3_oze0gb") #s(elfeed-entry ("www.reddit.com" . "t3_oze0gb") "I've added a file to a package (loaded with straight.el) and I can't get it to load. What am I doing wrong?!" "https://www.reddit.com/r/emacs/comments/oze0gb/ive_added_a_file_to_a_package_loaded_with/" 1628279070.0 #s(elfeed-ref "07bfb08f79012ae2fe3a0a3f453dcf5a55131829") html nil (emacs) "http://www.reddit.com/r/emacs/.rss" (:authors ((:name "/u/Jack-o-tall-tales" :uri "https://www.reddit.com/user/Jack-o-tall-tales")) :categories ("emacs"))) ("www.reddit.com" . "t3_ozh6u6") #s(elfeed-entry ("www.reddit.com" . "t3_ozh6u6") "Remote system monitoring?" "https://www.reddit.com/r/emacs/comments/ozh6u6/remote_system_monitoring/" 1628289217.0 #s(elfeed-ref "a64425ff125ac6a17275ad88063aafc78a41f407") html nil (emacs) "http://www.reddit.com/r/emacs/.rss" (:authors ((:name "/u/tammer42" :uri "https://www.reddit.com/user/tammer42")) :categories ("emacs"))) ("www.reddit.com" . "t3_oza47b") #s(elfeed-entry ("www.reddit.com" . "t3_oza47b") "Doom Emacs - I get the vanilla Emacs splash screen at startup - How to fix?" "https://www.reddit.com/r/emacs/comments/oza47b/doom_emacs_i_get_the_vanilla_emacs_splash_screen/" 1628267239.0 #s(elfeed-ref "0a26aafbeb7c0ede24b48c0ca520da5e52d4e32d") html nil (emacs) "http://www.reddit.com/r/emacs/.rss" (:authors ((:name "/u/toasty_fe" :uri "https://www.reddit.com/user/toasty_fe")) :categories ("emacs"))) ("www.reddit.com" . "t3_ozfzi7") #s(elfeed-entry ("www.reddit.com" . "t3_ozfzi7") "Blorg updates: tags & comments" "https://www.reddit.com/r/emacs/comments/ozfzi7/blorg_updates_tags_comments/" 1628285257.0 #s(elfeed-ref "211c16c53a57f6d07bd974db91092c4084f513f4") html nil (emacs) "http://www.reddit.com/r/emacs/.rss" (:authors ((:name "/u/tjgrinn" :uri "https://www.reddit.com/user/tjgrinn")) :categories ("emacs"))) ("www.reddit.com" . "t3_oz2mh8") #s(elfeed-entry ("www.reddit.com" . "t3_oz2mh8") "TRAMP workflows with multiple host" "https://www.reddit.com/r/emacs/comments/oz2mh8/tramp_workflows_with_multiple_host/" 1628238779.0 #s(elfeed-ref "fecab1761f66d5455f04918a6d3dce86ffa40768") html nil (emacs) "http://www.reddit.com/r/emacs/.rss" (:authors ((:name "/u/JoshuaOC" :uri "https://www.reddit.com/user/JoshuaOC")) :categories ("emacs"))) ("www.reddit.com" . "t3_ozeg25") #s(elfeed-entry ("www.reddit.com" . "t3_ozeg25") "Can't get org clocking working" "https://www.reddit.com/r/emacs/comments/ozeg25/cant_get_org_clocking_working/" 1628280405.0 #s(elfeed-ref "1532cde02874ea24123e74d9fe5a6ae8b73a978e") html nil (emacs) "http://www.reddit.com/r/emacs/.rss" (:authors ((:name "/u/MotherCanada" :uri "https://www.reddit.com/user/MotherCanada")) :categories ("emacs"))) ("www.reddit.com" . "t3_oz4m92") #s(elfeed-entry ("www.reddit.com" . "t3_oz4m92") "Prioritize certain completions in ivy" "https://www.reddit.com/r/emacs/comments/oz4m92/prioritize_certain_completions_in_ivy/" 1628248747.0 #s(elfeed-ref "1158be0e7aa8997402f14fd97cdc037af422c37b") html nil (emacs) "http://www.reddit.com/r/emacs/.rss" (:authors ((:name "/u/lmvrk" :uri "https://www.reddit.com/user/lmvrk")) :categories ("emacs"))) ("www.reddit.com" . "t3_oz5n06") #s(elfeed-entry ("www.reddit.com" . "t3_oz5n06") "How to automatically generate a datetree for a given date?" "https://www.reddit.com/r/emacs/comments/oz5n06/how_to_automatically_generate_a_datetree_for_a/" 1628252925.0 #s(elfeed-ref "cb618e855c894d1d32b5405435191601e10e5307") html nil (emacs) "http://www.reddit.com/r/emacs/.rss" (:authors ((:name "/u/joelsas" :uri "https://www.reddit.com/user/joelsas")) :categories ("emacs"))) ("www.reddit.com" . "t3_oyue0j") #s(elfeed-entry ("www.reddit.com" . "t3_oyue0j") "iOS: Quick org task input and search [early days]" "https://www.reddit.com/r/emacs/comments/oyue0j/ios_quick_org_task_input_and_search_early_days/" 1628205585.0 #s(elfeed-ref "484f556c16d22c34112bb1cd1d39210b6c3db5a4") html nil (emacs) "http://www.reddit.com/r/emacs/.rss" (:authors ((:name "/u/xenodium" :uri "https://www.reddit.com/user/xenodium")) :categories ("emacs"))) ("www.reddit.com" . "t3_oytbmj") #s(elfeed-entry ("www.reddit.com" . "t3_oytbmj") "Confirm When Killing Non-File-Visiting Buffers?" "https://www.reddit.com/r/emacs/comments/oytbmj/confirm_when_killing_nonfilevisiting_buffers/" 1628202116.0 #s(elfeed-ref "a3fcb5b038f8c8dabdc7200e5d1edb54c6dd2f46") html nil (emacs) "http://www.reddit.com/r/emacs/.rss" (:authors ((:name "/u/mrolivertaylor" :uri "https://www.reddit.com/user/mrolivertaylor")) :categories ("emacs"))) ("www.reddit.com" . "t3_oyp2ov") #s(elfeed-entry ("www.reddit.com" . "t3_oyp2ov") "xemacs, desert and word-perfect themes for Emacs" "https://www.reddit.com/r/emacs/comments/oyp2ov/xemacs_desert_and_wordperfect_themes_for_emacs/" 1628189610.0 #s(elfeed-ref "ee3ac3c67d3d090638e50bff334e1e752c3278dd") html nil (emacs) "http://www.reddit.com/r/emacs/.rss" (:authors ((:name "/u/defalias" :uri "https://www.reddit.com/user/defalias")) :categories ("emacs"))) ("www.reddit.com" . "t3_oyr2aw") #s(elfeed-entry ("www.reddit.com" . "t3_oyr2aw") "Can't type into floating windows in EXWM" "https://www.reddit.com/r/emacs/comments/oyr2aw/cant_type_into_floating_windows_in_exwm/" 1628195309.0 #s(elfeed-ref "d3af37f5aa80228c4ee36a8f5f5274f059d90486") html nil (emacs) "http://www.reddit.com/r/emacs/.rss" (:authors ((:name "/u/ShadowRylander" :uri "https://www.reddit.com/user/ShadowRylander")) :categories ("emacs"))) ("www.reddit.com" . "t3_oyssn2") #s(elfeed-entry ("www.reddit.com" . "t3_oyssn2") "Web browser freezes when using Emacs on another workspace" "https://www.reddit.com/r/emacs/comments/oyssn2/web_browser_freezes_when_using_emacs_on_another/" 1628200461.0 #s(elfeed-ref "7ba4d179dd7335381111a8e76df375be9e3b8bd7") html nil (emacs) "http://www.reddit.com/r/emacs/.rss" (:authors ((:name "/u/blutrients96" :uri "https://www.reddit.com/user/blutrients96")) :categories ("emacs"))) ("www.reddit.com" . "t3_oywgdt") #s(elfeed-entry ("www.reddit.com" . "t3_oywgdt") "Space bar as control" "https://www.reddit.com/r/emacs/comments/oywgdt/space_bar_as_control/" 1628212678.0 #s(elfeed-ref "5d16b24a9239b2ad3257c09cfe7dca51a1e750aa") html nil (emacs) "http://www.reddit.com/r/emacs/.rss" (:authors ((:name "/u/chandaliergalaxy" :uri "https://www.reddit.com/user/chandaliergalaxy")) :categories ("emacs"))) ("www.reddit.com" . "t3_oyr7g7") #s(elfeed-entry ("www.reddit.com" . "t3_oyr7g7") "Help building native comp emacs on manjaro" "https://www.reddit.com/r/emacs/comments/oyr7g7/help_building_native_comp_emacs_on_manjaro/" 1628195724.0 #s(elfeed-ref "f76913820b64906153fe685a55f34198694f315e") html nil (emacs) "http://www.reddit.com/r/emacs/.rss" (:authors ((:name "/u/_confused_hat" :uri "https://www.reddit.com/user/_confused_hat")) :categories ("emacs"))) ("www.reddit.com" . "t3_oynbb4") #s(elfeed-entry ("www.reddit.com" . "t3_oynbb4") "Use BBDB to send a mail to a group" "https://www.reddit.com/r/emacs/comments/oynbb4/use_bbdb_to_send_a_mail_to_a_group/" 1628184542.0 #s(elfeed-ref "6d05faab68d8b902324c69f2af06f29bffcdcd54") html nil (emacs) "http://www.reddit.com/r/emacs/.rss" (:authors ((:name "/u/DeltaBuffalo" :uri "https://www.reddit.com/user/DeltaBuffalo")) :categories ("emacs"))) ("www.reddit.com" . "t3_oyd33n") #s(elfeed-entry ("www.reddit.com" . "t3_oyd33n") "Question about editing Consult/Embark ripgrep results" "https://www.reddit.com/r/emacs/comments/oyd33n/question_about_editing_consultembark_ripgrep/" 1628151304.0 #s(elfeed-ref "cc5f83b0ff480047ba31c6498f9b9e9ac92e2ef3") html nil (emacs) "http://www.reddit.com/r/emacs/.rss" (:authors ((:name "/u/polaris64" :uri "https://www.reddit.com/user/polaris64")) :categories ("emacs"))) ("www.reddit.com" . "t3_oyj91g") #s(elfeed-entry ("www.reddit.com" . "t3_oyj91g") "What is the difference between :init` and :config`?" "https://www.reddit.com/r/emacs/comments/oyj91g/what_is_the_difference_between_init_and_config/" 1628173548.0 #s(elfeed-ref "cc9d40526be63dcde69440114f670f8804f16a20") html nil (emacs) "http://www.reddit.com/r/emacs/.rss" (:authors ((:name "/u/eis3nheim" :uri "https://www.reddit.com/user/eis3nheim")) :categories ("emacs"))) ("timharford.com" . "https://timharford.com/?p=7268") #s(elfeed-entry ("timharford.com" . "https://timharford.com/?p=7268") "We must face facts, even the ones we don’t like" "https://timharford.com/2021/08/we-must-face-facts-even-the-ones-we-dont-like/" 1628181960.0 #s(elfeed-ref "fb53fef97fcfe71969773ffd89b8ad1464527254") html nil (daily) "http://timharford.com/feed/" (:authors ((:name "Tim Harford")) :categories ("Undercover Economist"))) ("timharford.com" . "https://timharford.com/?p=7287") #s(elfeed-entry ("timharford.com" . "https://timharford.com/?p=7287") "4000 weeks and the clock is ticking" "https://timharford.com/2021/08/4000-weeks-and-the-clock-is-ticking/" 1627917840.0 #s(elfeed-ref "3155c3982536fe473475d9dda4caf12c928d9cef") html nil (daily) "http://timharford.com/feed/" (:authors ((:name "Tim Harford")) :categories ("Marginalia"))) ("timharford.com" . "https://timharford.com/?p=7260") #s(elfeed-entry ("timharford.com" . "https://timharford.com/?p=7260") "Statue wars, pandemic reopening, and the art of less" "https://timharford.com/2021/07/statue-wars-pandemic-reopening-and-the-art-of-less/" 1627574700.0 #s(elfeed-ref "28d98a40164f1a46c746252d4f806e04996cd393") html nil (daily) "http://timharford.com/feed/" (:authors ((:name "Tim Harford")) :categories ("Undercover Economist"))) ("timharford.com" . "https://timharford.com/?p=7285") #s(elfeed-entry ("timharford.com" . "https://timharford.com/?p=7285") "Summer maths books!" "https://timharford.com/2021/07/summer-maths-books/" 1627312560.0 #s(elfeed-ref "4cc6a87db8962664696274872daae68aa5e88ae0") html nil (daily) "http://timharford.com/feed/" (:authors ((:name "Tim Harford")) :categories ("Marginalia"))) ("timharford.com" . "https://timharford.com/?p=7255") #s(elfeed-entry ("timharford.com" . "https://timharford.com/?p=7255") "The strange temptations of phoney medicine" "https://timharford.com/2021/07/the-strange-temptations-of-phoney-medicine/" 1626964920.0 #s(elfeed-ref "624247669a563923692d36586b932ae2faca8ab0") html nil (daily) "http://timharford.com/feed/" (:authors ((:name "Tim Harford")) :categories ("Undercover Economist"))) ("timharford.com" . "https://timharford.com/?p=7251") #s(elfeed-entry ("timharford.com" . "https://timharford.com/?p=7251") "The Tyranny of Spreadsheets" "https://timharford.com/2021/07/the-tyranny-of-spreadsheets/" 1626879480.0 #s(elfeed-ref "2a540edd48310dfdeb0613512e2e27e30dc91d7f") html nil (daily) "http://timharford.com/feed/" (:authors ((:name "Tim Harford")) :categories ("Highlights" "Other Writing"))) ("timharford.com" . "https://timharford.com/?p=7283") #s(elfeed-entry ("timharford.com" . "https://timharford.com/?p=7283") "Aiming for the moon, Hard Times, and Marlon and Jake read dead people" "https://timharford.com/2021/07/aiming-for-the-moon-hard-times-and-marlon-and-jake-read-dead-people/" 1626707100.0 #s(elfeed-ref "86b452e098bacdb0292074f8bc7284527a6a773b") html nil (daily) "http://timharford.com/feed/" (:authors ((:name "Tim Harford")) :categories ("Marginalia"))) ("timharford.com" . "https://timharford.com/?p=7239") #s(elfeed-entry ("timharford.com" . "https://timharford.com/?p=7239") "Why we lose track of spending in a cashless society" "https://timharford.com/2021/07/why-we-lose-track-of-spending-in-a-cashless-society/" 1626366540.0 #s(elfeed-ref "2f78b64670e46ff8bdee7361b823c2df76d5ebaa") html nil (daily) "http://timharford.com/feed/" (:authors ((:name "Tim Harford")) :categories ("Undercover Economist"))) ("timharford.com" . "https://timharford.com/?p=7270") #s(elfeed-entry ("timharford.com" . "https://timharford.com/?p=7270") "Why do we work so hard?, and other intriguing questions" "https://timharford.com/2021/07/why-do-we-work-so-hard-and-other-intriguing-questions/" 1626106740.0 #s(elfeed-ref "ad0fbbd6b828ae1ca4bc13d248ebcaeed553beb2") html nil (daily) "http://timharford.com/feed/" (:authors ((:name "Tim Harford")) :categories ("Marginalia"))) ("timharford.com" . "https://timharford.com/?p=7232") #s(elfeed-entry ("timharford.com" . "https://timharford.com/?p=7232") "Mr Spock is not as logical as he’d like to think" "https://timharford.com/2021/07/me-spock-is-not-as-logical-as-hed-like-to-think/" 1625758860.0 #s(elfeed-ref "54d122ce98471f5ed648dbe50f6937fc36d1f0c2") html nil (daily) "http://timharford.com/feed/" (:authors ((:name "Tim Harford")) :categories ("Undercover Economist"))) ("www.ruanyifeng.com" . "tag:www.ruanyifeng.com,2021:/blog//1.2266") #s(elfeed-entry ("www.ruanyifeng.com" . "tag:www.ruanyifeng.com,2021:/blog//1.2266") "科技爱好者周刊（第 170 期）：软件订阅制的胜利" "http://www.ruanyifeng.com/blog/2021/08/weekly-issue-170.html" 1628209401.0 #s(elfeed-ref "a5aa49f038e3ae832e579ad12ad13b462f278381") html nil (starred) "https://www.ruanyifeng.com/blog/atom.xml" (:authors ((:name "阮一峰" :uri "http://www.ruanyifeng.com")) :categories ("Weekly"))) ("www.ruanyifeng.com" . "tag:www.ruanyifeng.com,2021:/blog//1.2265") #s(elfeed-entry ("www.ruanyifeng.com" . "tag:www.ruanyifeng.com,2021:/blog//1.2265") "科技爱好者周刊（第 169 期）：五菱汽车的产品设计" "http://www.ruanyifeng.com/blog/2021/07/weekly-issue-169.html" 1627605001.0 #s(elfeed-ref "177e9bc41514bd95e741b387c25d323a28722bc9") html nil nil "https://www.ruanyifeng.com/blog/atom.xml" (:authors ((:name "阮一峰" :uri "http://www.ruanyifeng.com")) :categories ("Weekly"))) ("www.ruanyifeng.com" . "tag:www.ruanyifeng.com,2021:/blog//1.2264") #s(elfeed-entry ("www.ruanyifeng.com" . "tag:www.ruanyifeng.com,2021:/blog//1.2264") "科技爱好者周刊（第 168 期）：游戏《底特律：变人》" "http://www.ruanyifeng.com/blog/2021/07/weekly-issue-168.html" 1627000449.0 #s(elfeed-ref "6506ef91269beb679e14f7da60ef224dfa3a781b") html nil nil "https://www.ruanyifeng.com/blog/atom.xml" (:authors ((:name "阮一峰" :uri "http://www.ruanyifeng.com")) :categories ("Weekly"))))) :index #s(avl-tree- [[[[[[[[[nil nil ("emacs.stackexchange.com" . "https://emacs.stackexchange.com/q/68001") 0] nil ("rsshub.app" . "2045190209") -1] [[nil nil ("www.reddit.com" . "t3_ozqwkv") 0] nil ("rsshub.app" . "2045148358") -1] ("rsshub.app" . "1725564795") 0] [[nil nil ("emacs.stackexchange.com" . "https://emacs.stackexchange.com/q/67999") 0] [[nil nil ("rsshub.app" . "2044987212") 0] [nil nil ("rsshub.app" . "1840353966") 0] ("rsshub.app" . "1786508482") 0] ("rsshub.app" . "2044486350") 1] ("www.reddit.com" . "t3_ozqhbi") 0] [[[nil nil ("rsshub.app" . "2044844185") 0] [[nil nil ("emacs.stackexchange.com" . "https://emacs.stackexchange.com/q/67998") 0] nil ("rsshub.app" . "2043750102") -1] ("rsshub.app" . "2044743145") 1] [[nil nil ("rsshub.app" . "2044585334") 0] [nil nil ("rsshub.app" . "2044504069") 0] ("rsshub.app" . "2044605764") 0] ("rsshub.app" . "2044532682") -1] ("rsshub.app" . "2044559411") 0] [[[[nil nil ("rsshub.app" . "2044299403") 0] [nil [nil nil ("www.reddit.com" . "t3_ozh6u6") 0] ("emacs.stackexchange.com" . "https://emacs.stackexchange.com/q/67996") 1] ("rsshub.app" . "2044074977") 1] [[[nil nil ("www.reddit.com" . "t3_ozfzi7") 0] nil ("www.reddit.com" . "t3_ozfup5") -1] [[nil nil ("www.reddit.com" . "t3_ozeg25") 0] nil ("www.reddit.com" . "t3_oze0gb") -1] ("www.reddit.com" . "t3_ozfcj2") 0] ("emacs.stackexchange.com" . "https://emacs.stackexchange.com/q/67994") 0] [[nil [nil nil ("www.reddit.com" . "t3_oza47b") 0] ("rsshub.app" . "2043950794") 1] [[[nil nil ("rsshub.app" . "2034513415") 0] [nil nil ("rsshub.app" . "2043411044") 0] ("rsshub.app" . "2043712720") 0] [[nil nil ("www.reddit.com" . "t3_oz5n06") 0] [nil nil ("telescoper.wordpress.com" . "http://telescoper.wordpress.com/2021/08/06/autumn-arrives/") 0] ("www.reddit.com" . "t3_oz4m92") 0] ("www.reddit.com" . "t3_oz60xr") 0] ("rsshub.app" . "2043779424") 1] ("www.reddit.com" . "t3_ozdtmu") 0] ("rsshub.app" . "2031798410") 0] [[[[[nil [nil nil ("www.reddit.com" . "t3_oz2mh8") 0] ("emacs.stackexchange.com" . "https://emacs.stackexchange.com/q/67992") 1] [nil nil ("rsshub.app" . "2042783490") 0] ("emacs.stackexchange.com" . "https://emacs.stackexchange.com/q/67991") -1] [[[nil nil ("www.reddit.com" . "t3_oyzfz9") 0] [nil [nil nil ("www.ruanyifeng.com" . "tag:www.ruanyifeng.com,2021:/blog//1.2266") 0] ("www.reddit.com" . "t3_oywgdt") 1] ("xkcd.com" . "https://xkcd.com/2499/") 1] [nil [nil nil ("www.reddit.com" . "t3_oyssn2") 0] ("www.reddit.com" . "t3_oytbmj") 1] ("www.reddit.com" . "t3_oyue0j") -1] ("rsshub.app" . "2042761115") 1] [[[[nil [nil nil ("www.reddit.com" . "t3_oyr7g7") 0] ("emacs.stackexchange.com" . "https://emacs.stackexchange.com/q/67986") 1] [nil nil ("www.reddit.com" . "t3_oyr2aw") 0] ("emacs.stackexchange.com" . "https://emacs.stackexchange.com/q/67985") -1] [[[nil nil ("www.reddit.com" . "t3_oynbb4") 0] nil ("emacs.stackexchange.com" . "https://emacs.stackexchange.com/q/67984") -1] [[nil nil ("timharford.com" . "https://timharford.com/?p=7268") 0] [nil nil ("www.reddit.com" . "t3_oyl40m") 0] ("rsshub.app" . "2041797664") 0] ("telescoper.wordpress.com" . "http://telescoper.wordpress.com/2021/08/05/pointless-postscript/") 0] ("www.reddit.com" . "t3_oyp2ov") 0] [[[[nil nil ("www.reddit.com" . "t3_oyj91g") 0] nil ("rsshub.app" . "2041385784") -1] [nil nil ("emacs.stackexchange.com" . "https://emacs.stackexchange.com/q/67972") 0] ("feeds.feedburner.com" . "tag:xahlee,2021-08-05:191354") -1] [[[nil nil ("www.reddit.com" . "t3_oyd33n") 0] nil ("telescoper.wordpress.com" . "http://telescoper.wordpress.com/?p=49982") -1] [nil nil ("www.reddit.com" . "t3_oxo1xh") 0] ("rsshub.app" . "2039391392") -1] ("rsshub.app" . "2040765147") 0] ("rsshub.app" . "2041670320") 0] ("emacs.stackexchange.com" . "https://emacs.stackexchange.com/q/67988") 0] [[[[[nil nil ("xkcd.com" . "https://xkcd.com/2498/") 0] [nil nil ("telescoper.wordpress.com" . "http://telescoper.wordpress.com/?p=49976") 0] ("rsshub.app" . "2038124226") 0] [[nil nil ("rsshub.app" . "2035905245") 0] [[nil nil ("timharford.com" . "https://timharford.com/?p=7287") 0] nil ("telescoper.wordpress.com" . "http://telescoper.wordpress.com/?p=49958") -1] ("feeds.feedburner.com" . "tag:xahlee,2021-08-03:031619") 1] ("rsshub.app" . "2035966343") 1] [[[nil [nil nil ("telescoper.wordpress.com" . "http://telescoper.wordpress.com/?p=49947") 0] ("feeds.feedburner.com" . "tag:xahlee,2021-08-01:202720") 1] [[nil nil ("telescoper.wordpress.com" . "http://telescoper.wordpress.com/?p=49937") 0] [nil nil ("telescoper.wordpress.com" . "http://telescoper.wordpress.com/?p=49912") 0] ("telescoper.wordpress.com" . "http://telescoper.wordpress.com/?p=49930") 0] ("feeds.feedburner.com" . "tag:xahlee,2021-08-01:013859") 0] [[[nil nil ("www.ruanyifeng.com" . "tag:www.ruanyifeng.com,2021:/blog//1.2265") 0] nil ("timharford.com" . "https://timharford.com/?p=7260") -1] [[nil nil ("timharford.com" . "https://timharford.com/?p=7285") 0] [nil nil ("feeds.feedburner.com" . "tag:xahlee,2021-07-26:152548") 0] ("feeds.feedburner.com" . "tag:xahlee,2021-07-26:152558") 0] ("telescoper.wordpress.com" . "http://telescoper.wordpress.com/?p=49894") 0] ("xkcd.com" . "https://xkcd.com/2496/") 0] ("xkcd.com" . "https://xkcd.com/2497/") 0] [[[[nil nil ("www.ruanyifeng.com" . "tag:www.ruanyifeng.com,2021:/blog//1.2264") 0] nil ("timharford.com" . "https://timharford.com/?p=7255") -1] [[nil nil ("feeds.feedburner.com" . "tag:xahlee,2021-07-20:190803") 0] [nil nil ("feeds.feedburner.com" . "tag:xahlee,2021-07-20:155142") 0] ("feeds.feedburner.com" . "tag:xahlee,2021-07-20:155231") 0] ("timharford.com" . "https://timharford.com/?p=7251") 0] [[[nil nil ("timharford.com" . "https://timharford.com/?p=7283") 0] nil ("feeds.feedburner.com" . "tag:xahlee,2021-07-19:203125") -1] [[nil nil ("timharford.com" . "https://timharford.com/?p=7239") 0] [nil [nil nil ("timharford.com" . "https://timharford.com/?p=7270") 0] ("feeds.feedburner.com" . "tag:xahlee,2021-07-14:071548") 1] ("feeds.feedburner.com" . "tag:xahlee,2021-07-14:201250") 1] ("feeds.feedburner.com" . "tag:xahlee,2021-07-19:203114") 1] ("rsshub.app" . "1982350013") 1] ("rsshub.app" . "2020039447") 0] ("rsshub.app" . "2038416727") 0] ("rsshub.app" . "2043156577") 1] [[[[[[nil [nil nil ("timharford.com" . "https://timharford.com/?p=7232") 0] ("feeds.feedburner.com" . "tag:xahlee,2021-07-11:204058") 1] [[nil nil ("feeds.feedburner.com" . "tag:xahlee,2021-07-05:191452") 0] [nil nil ("feeds.feedburner.com" . "tag:xahlee,2021-07-04:210855") 0] ("feeds.feedburner.com" . "tag:xahlee,2021-07-05:165820") 0] ("feeds.feedburner.com" . "tag:xahlee,2021-07-08:220436") 0] [[[nil nil ("feeds.feedburner.com" . "tag:xahlee,2021-07-04:210757") 0] [nil nil ("feeds.feedburner.com" . "tag:xahlee,2021-07-03:180941") 0] ("feeds.feedburner.com" . "tag:xahlee,2021-07-04:205813") 0] [nil nil ("feeds.feedburner.com" . "tag:xahlee,2021-07-01:195541") 0] ("feeds.feedburner.com" . "tag:xahlee,2021-07-01:195600") -1] ("emacs.stackexchange.com" . "https://emacs.stackexchange.com/q/66593") 0] [[[nil nil ("feeds.feedburner.com" . "tag:xahlee,2021-07-01:195102") 0] [nil nil ("feeds.feedburner.com" . "tag:xahlee,2021-06-28:222109") 0] ("feeds.feedburner.com" . "tag:xahlee,2021-06-29:001228") 0] [nil nil ("feeds.feedburner.com" . "tag:xahlee,2021-06-27:223426") 0] ("feeds.feedburner.com" . "tag:xahlee,2021-06-28:033140") -1] ("feeds.feedburner.com" . "tag:xahlee,2021-07-01:195530") -1] [[[[nil nil ("feeds.feedburner.com" . "tag:xahlee,2021-06-26:193034") 0] [nil [nil nil ("feeds.feedburner.com" . "tag:xahlee,2021-06-25:192017") 0] ("feeds.feedburner.com" . "tag:xahlee,2021-06-26:185056") 1] ("feeds.feedburner.com" . "tag:xahlee,2021-06-26:185101") 1] [[[nil nil ("feeds.feedburner.com" . "tag:xahlee,2021-06-25:072849") 0] [nil nil ("feeds.feedburner.com" . "tag:xahlee,2021-06-24:213859") 0] ("feeds.feedburner.com" . "tag:xahlee,2021-06-24:213911") 0] [nil nil ("feeds.feedburner.com" . "tag:xahlee,2021-06-22:220231") 0] ("feeds.feedburner.com" . "tag:xahlee,2021-06-24:053150") -1] ("rsshub.app" . "1956527212") 0] [[[nil nil ("feeds.feedburner.com" . "tag:xahlee,2021-06-22:180908") 0] [nil nil ("feeds.feedburner.com" . "tag:xahlee,2021-06-22:033741") 0] ("feeds.feedburner.com" . "tag:xahlee,2021-06-22:035155") 0] [nil nil ("feeds.feedburner.com" . "tag:xahlee,2021-06-18:192757") 0] ("feeds.feedburner.com" . "tag:xahlee,2021-06-20:221608") -1] ("feeds.feedburner.com" . "tag:xahlee,2021-06-22:192935") -1] ("feeds.feedburner.com" . "tag:xahlee,2021-06-27:221112") 0] [[[[[[[nil nil ("feeds.feedburner.com" . "tag:xahlee,2021-06-17:055706") 0] [nil nil ("feeds.feedburner.com" . "tag:xahlee,2021-06-08:204226") 0] ("feeds.feedburner.com" . "tag:xahlee,2021-06-08:232614") 0] [nil nil ("feeds.feedburner.com" . "tag:xahlee,2021-06-05:221130") 0] ("feeds.feedburner.com" . "tag:xahlee,2021-06-06:005750") -1] [[[nil nil ("feeds.feedburner.com" . "tag:xahlee,2021-06-03:051047") 0] [nil nil ("feeds.feedburner.com" . "tag:xahlee,2021-05-31:223126") 0] ("feeds.feedburner.com" . "tag:xahlee,2021-06-01:041209") 0] [nil nil ("feeds.feedburner.com" . "tag:xahlee,2021-05-30:024324") 0] ("feeds.feedburner.com" . "tag:xahlee,2021-05-30:024402") -1] ("feeds.feedburner.com" . "tag:xahlee,2021-06-05:212326") 0] [[[nil nil ("feeds.feedburner.com" . "tag:xahlee,2021-05-18:215208") 0] [nil nil ("feeds.feedburner.com" . "tag:xahlee,2021-05-17:175550") 0] ("feeds.feedburner.com" . "tag:xahlee,2021-05-17:214124") 0] [nil nil ("feeds.feedburner.com" . "tag:xahlee,2021-05-14:205102") 0] ("feeds.feedburner.com" . "tag:xahlee,2021-05-17:175530") -1] ("feeds.feedburner.com" . "tag:xahlee,2021-05-20:060208") -1] [[[[[nil nil ("feeds.feedburner.com" . "tag:xahlee,2021-05-14:193632") 0] [nil nil ("feeds.feedburner.com" . "tag:xahlee,2021-05-11:065017") 0] ("feeds.feedburner.com" . "tag:xahlee,2021-05-12:185305") 0] [nil nil ("feeds.feedburner.com" . "tag:xahlee,2021-05-07:212835") 0] ("feeds.feedburner.com" . "tag:xahlee,2021-05-07:220001") -1] [[[nil nil ("feeds.feedburner.com" . "tag:xahlee,2021-05-03:185646") 0] [nil nil ("feeds.feedburner.com" . "tag:xahlee,2021-04-25:211220") 0] ("feeds.feedburner.com" . "tag:xahlee,2021-04-28:052450") 0] [nil nil ("feeds.feedburner.com" . "tag:xahlee,2021-04-19:051712") 0] ("feeds.feedburner.com" . "tag:xahlee,2021-04-19:051734") -1] ("feeds.feedburner.com" . "tag:xahlee,2021-05-03:185701") 0] [[[[nil nil ("feeds.feedburner.com" . "tag:xahlee,2021-04-14:192959") 0] [nil nil ("feeds.feedburner.com" . "tag:xahlee,2021-04-11:032432") 0] ("feeds.feedburner.com" . "tag:xahlee,2021-04-11:064846") 0] [[nil nil ("feeds.feedburner.com" . "tag:xahlee,2021-04-11:030205") 0] [nil nil ("feeds.feedburner.com" . "tag:xahlee,2021-04-03:231808") 0] ("feeds.feedburner.com" . "tag:xahlee,2021-04-02:171228") 0] ("feeds.feedburner.com" . "tag:xahlee,2021-04-11:030220") 0] [[nil [nil nil ("feeds.feedburner.com" . "tag:xahlee,2021-04-02:171238") 0] ("feeds.feedburner.com" . "tag:xahlee,2021-04-03:231818") 1] [nil [nil nil ("emacs.stackexchange.com" . "https://emacs.stackexchange.com/q/61687") 0] ("emacs.stackexchange.com" . "https://emacs.stackexchange.com/q/61775") 1] ("emacs.stackexchange.com" . "https://emacs.stackexchange.com/q/63802") 0] ("feeds.feedburner.com" . "tag:xahlee,2021-04-03:232157") 0] ("feeds.feedburner.com" . "tag:xahlee,2021-04-15:025137") 0] ("feeds.feedburner.com" . "tag:xahlee,2021-05-14:201756") 0] [[[[nil nil ("emacs.stackexchange.com" . "https://emacs.stackexchange.com/q/56036") 0] [nil nil ("emacs.stackexchange.com" . "https://emacs.stackexchange.com/q/55520") 0] ("rsshub.app" . "941760510") 0] [[nil nil ("emacs.stackexchange.com" . "https://emacs.stackexchange.com/q/44810") 0] [[nil nil ("pragmaticemacs.com" . "http://pragmaticemacs.com/?p=833") 0] nil ("emacs.stackexchange.com" . "https://emacs.stackexchange.com/q/38603") -1] ("emacs.stackexchange.com" . "https://emacs.stackexchange.com/q/42133") 1] ("emacs.stackexchange.com" . "https://emacs.stackexchange.com/q/51716") 1] [[[[nil nil ("pragmaticemacs.com" . "http://pragmaticemacs.com/?p=815") 0] [[nil nil ("pragmaticemacs.com" . "http://pragmaticemacs.com/?p=800") 0] [nil nil ("pragmaticemacs.com" . "http://pragmaticemacs.com/?p=792") 0] ("pragmaticemacs.com" . "http://pragmaticemacs.com/?p=795") 0] ("pragmaticemacs.com" . "http://pragmaticemacs.com/?p=809") 1] [[[nil nil ("pragmaticemacs.com" . "http://pragmaticemacs.com/?p=789") 0] nil ("pragmaticemacs.com" . "http://pragmaticemacs.com/?p=787") -1] [nil nil ("pragmaticemacs.com" . "http://pragmaticemacs.com/?p=776") 0] ("pragmaticemacs.com" . "http://pragmaticemacs.com/?p=781") -1] ("emacs.stackexchange.com" . "https://emacs.stackexchange.com/q/36184") 0] [[[[nil nil ("emacs.stackexchange.com" . "https://emacs.stackexchange.com/q/27765") 0] [nil nil ("understandinguncertainty.org" . "8844 at http://understandinguncertainty.org") 0] ("understandinguncertainty.org" . "8845 at http://understandinguncertainty.org") 0] [[nil nil ("understandinguncertainty.org" . "8566 at http://understandinguncertainty.org") 0] [nil nil ("understandinguncertainty.org" . "8352 at http://understandinguncertainty.org") 0] ("understandinguncertainty.org" . "8550 at http://understandinguncertainty.org") 0] ("understandinguncertainty.org" . "8583 at http://understandinguncertainty.org") 0] [[[nil nil ("understandinguncertainty.org" . "8306 at http://understandinguncertainty.org") 0] [nil nil ("understandinguncertainty.org" . "8264 at http://understandinguncertainty.org") 0] ("understandinguncertainty.org" . "8295 at http://understandinguncertainty.org") 0] [nil [nil nil ("understandinguncertainty.org" . "58 at http://understandinguncertainty.org") 0] ("emacs.stackexchange.com" . "https://emacs.stackexchange.com/q/12086") 1] ("emacs.stackexchange.com" . "https://emacs.stackexchange.com/q/14537") 0] ("emacs.stackexchange.com" . "https://emacs.stackexchange.com/q/18973") 0] ("emacs.stackexchange.com" . "https://emacs.stackexchange.com/q/34868") 0] ("emacs.stackexchange.com" . "https://emacs.stackexchange.com/q/37716") 1] ("emacs.stackexchange.com" . "https://emacs.stackexchange.com/q/60866") 0] ("feeds.feedburner.com" . "tag:xahlee,2021-06-17:233542") 1] ("rsshub.app" . "1993071728") 0] nil nil 0] elfeed-db-compare) :last-update 1628338870.4549756)